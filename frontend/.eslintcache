[{"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\index.js":"1","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\App.js":"2","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\utils\\utils.js":"3","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\utils\\AppContext.js":"4","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\user.service.js":"5","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\auth-header.js":"6","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\auth.service.js":"7","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\AppRoute.js":"8","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Error\\Error.js":"9","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Footer\\Footer.js":"10","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Header\\Header.js":"11","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Homepage.js":"12","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Login\\Login.js":"13","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Register\\Register.js":"14","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\OTPComfirm\\OTP.js":"15","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Profile.js":"16","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Slide\\Slide.js":"17","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\ResetPassword\\ResetPassword.js":"18","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Products\\Products.js":"19","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Layout\\Default.js":"20","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Layout\\Auth.js":"21","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Layout\\AdminBasic\\AdminBasic.js":"22","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\ManagerUser.js":"23","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\Source\\ManagerSource.js":"24","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Teacher\\Teacher.js":"25","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Teacher\\Modal_Input_Teacher.js":"26","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Icon\\index.js":"27","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Teacher\\Modal_Edit_Teacher.js":"28","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Student\\Student.js":"29","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Student\\Modal_Edit_Student.js":"30","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Student\\Modal_Input_Student.js":"31","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\categorygroup.service.js":"32","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageYTN.js":"33","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageXNN.js":"34","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageDK.js":"35","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageMN.js":"36","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\category.service.js":"37","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\Source\\Source.js":"38","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\CategoriesGroup\\ManagerCategoriesGroup.js":"39","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\CategoriesGroup\\Modal_Add_CategoryGroup.js":"40","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\CategoriesGroup\\Modal_Edit_CategoryGroup.js":"41","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\ChangeProfileUser.js":"42","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\ChangePassword.js":"43","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\FavorCourse.js":"44","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\RegisteredCourse.js":"45","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\CoursesDetail\\CoursesDetail.js":"46","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\CoursesDetail\\Detail\\Detail.js":"47","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\InfoTeacher.js":"48","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\Source.js":"49","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category.js":"50","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Source.js":"51","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\Detail.js":"52","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\product.service.js":"53","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\ModalEdit.js":"54","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Courses\\Courses.js":"55","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Courses\\CoursesList\\CoursesList.js":"56","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\ModalEditProduct.js":"57","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\ModalAddProduct.js":"58","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\ModalAddCategory.js":"59","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\courses.service.js":"60","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\serivces.js":"61","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\home.service.js":"62","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\CoursesDetail\\CommentCourses\\CommentCourses.js":"63","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\coursesToken.service.js":"64"},{"size":424,"mtime":1614422766456,"results":"65","hashOfConfig":"66"},{"size":7595,"mtime":1616170863577,"results":"67","hashOfConfig":"66"},{"size":1885,"mtime":1615693726291,"results":"68","hashOfConfig":"66"},{"size":219,"mtime":1614422766459,"results":"69","hashOfConfig":"66"},{"size":1388,"mtime":1616132674593,"results":"70","hashOfConfig":"66"},{"size":156,"mtime":1614422766457,"results":"71","hashOfConfig":"66"},{"size":2011,"mtime":1616063549394,"results":"72","hashOfConfig":"66"},{"size":361,"mtime":1614422766429,"results":"73","hashOfConfig":"66"},{"size":724,"mtime":1614422766431,"results":"74","hashOfConfig":"66"},{"size":2612,"mtime":1614422766432,"results":"75","hashOfConfig":"66"},{"size":6964,"mtime":1616228217681,"results":"76","hashOfConfig":"66"},{"size":410,"mtime":1615939685678,"results":"77","hashOfConfig":"66"},{"size":7225,"mtime":1615942725790,"results":"78","hashOfConfig":"66"},{"size":7185,"mtime":1614422766442,"results":"79","hashOfConfig":"66"},{"size":6352,"mtime":1614422766438,"results":"80","hashOfConfig":"66"},{"size":7798,"mtime":1616383670253,"results":"81","hashOfConfig":"66"},{"size":1547,"mtime":1614422766436,"results":"82","hashOfConfig":"66"},{"size":6913,"mtime":1614422766443,"results":"83","hashOfConfig":"66"},{"size":2567,"mtime":1616112932567,"results":"84","hashOfConfig":"66"},{"size":440,"mtime":1614422766455,"results":"85","hashOfConfig":"66"},{"size":543,"mtime":1614422766455,"results":"86","hashOfConfig":"66"},{"size":2096,"mtime":1614422766454,"results":"87","hashOfConfig":"66"},{"size":2343,"mtime":1614422766448,"results":"88","hashOfConfig":"66"},{"size":8077,"mtime":1616170863721,"results":"89","hashOfConfig":"66"},{"size":8965,"mtime":1616170863762,"results":"90","hashOfConfig":"66"},{"size":1715,"mtime":1614422766451,"results":"91","hashOfConfig":"66"},{"size":5898,"mtime":1614422766436,"results":"92","hashOfConfig":"66"},{"size":2090,"mtime":1616049407478,"results":"93","hashOfConfig":"66"},{"size":7338,"mtime":1616170863741,"results":"94","hashOfConfig":"66"},{"size":2126,"mtime":1616049397255,"results":"95","hashOfConfig":"66"},{"size":1760,"mtime":1613828485691,"results":"96","hashOfConfig":"97"},{"size":1069,"mtime":1616063549395,"results":"98","hashOfConfig":"66"},{"size":1821,"mtime":1616226792596,"results":"99","hashOfConfig":"66"},{"size":1819,"mtime":1615939685685,"results":"100","hashOfConfig":"66"},{"size":1821,"mtime":1616226792584,"results":"101","hashOfConfig":"66"},{"size":1803,"mtime":1615939685684,"results":"102","hashOfConfig":"66"},{"size":1559,"mtime":1616063549529,"results":"103","hashOfConfig":"66"},{"size":5532,"mtime":1616038348652,"results":"104","hashOfConfig":"66"},{"size":7907,"mtime":1616170863699,"results":"105","hashOfConfig":"66"},{"size":1933,"mtime":1614422766446,"results":"106","hashOfConfig":"66"},{"size":2414,"mtime":1616049223604,"results":"107","hashOfConfig":"66"},{"size":4658,"mtime":1616384600855,"results":"108","hashOfConfig":"66"},{"size":4740,"mtime":1616049207896,"results":"109","hashOfConfig":"66"},{"size":1397,"mtime":1616380685868,"results":"110","hashOfConfig":"66"},{"size":2737,"mtime":1616380685878,"results":"111","hashOfConfig":"66"},{"size":6804,"mtime":1616170863839,"results":"112","hashOfConfig":"66"},{"size":6719,"mtime":1616380685969,"results":"113","hashOfConfig":"66"},{"size":3511,"mtime":1616228485424,"results":"114","hashOfConfig":"66"},{"size":2606,"mtime":1615348013330,"results":"115","hashOfConfig":"66"},{"size":4845,"mtime":1616061163646,"results":"116","hashOfConfig":"66"},{"size":4266,"mtime":1615907359079,"results":"117","hashOfConfig":"66"},{"size":15943,"mtime":1616049374786,"results":"118","hashOfConfig":"66"},{"size":1191,"mtime":1616063549431,"results":"119","hashOfConfig":"66"},{"size":7238,"mtime":1616049074371,"results":"120","hashOfConfig":"66"},{"size":11398,"mtime":1616380685888,"results":"121","hashOfConfig":"66"},{"size":8389,"mtime":1616380685925,"results":"122","hashOfConfig":"66"},{"size":5635,"mtime":1616049037683,"results":"123","hashOfConfig":"66"},{"size":3866,"mtime":1616049086537,"results":"124","hashOfConfig":"66"},{"size":5695,"mtime":1616049993132,"results":"125","hashOfConfig":"66"},{"size":1107,"mtime":1616380685979,"results":"126","hashOfConfig":"66"},{"size":134,"mtime":1615939685730,"results":"127","hashOfConfig":"66"},{"size":714,"mtime":1616226792634,"results":"128","hashOfConfig":"66"},{"size":5001,"mtime":1616380685960,"results":"129","hashOfConfig":"66"},{"size":1260,"mtime":1616380685989,"results":"130","hashOfConfig":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"9cithc",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"133"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"133"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18qlj7y",{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"133"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"133"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"133"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"231","usedDeprecatedRules":"133"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"234","usedDeprecatedRules":"133"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"133"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"133"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"133"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"133"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"133"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":3,"source":"258","usedDeprecatedRules":"133"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"273","usedDeprecatedRules":"133"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\index.js",[],["276","277"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\App.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\utils\\utils.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\utils\\AppContext.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\user.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\auth-header.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\auth.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\AppRoute.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Error\\Error.js",[],["278","279"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Header\\Header.js",["280","281"],"import { useContext, useState } from \"react\";\r\nimport { //Input,\r\n        Avatar, Dropdown, Menu, notification } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { AppContext } from \"../../utils/AppContext\";\r\nimport { parseAccessToken } from \"../../utils/utils\";\r\n\r\nimport Swal from  'sweetalert2'\r\n\r\n//const { Search } = Input;\r\n\r\nconst HeaderCustomize = () => {\r\n  const {\r\n    nameUser,\r\n    imageUser,\r\n    //setnameUser,\r\n    //saveToken,\r\n    checkLocalStorage,\r\n    //setCheckLocalStorage,\r\n    //setCheckOTPConfim,\r\n    logOut,\r\n    userid,\r\n    userJobId,\r\n    //setUserJobId,\r\n    setProfile,\r\n  } = useContext(AppContext);\r\n  const profileUser = () => {\r\n    let userdata = {\r\n      userId: userid,\r\n    };\r\n\r\n    AuthService()\r\n      .getProfile(userdata)\r\n      .then((data) => {\r\n        setProfile(data.data.user[0]);\r\n      });\r\n  };\r\n  // const onSearch = (value) => console.log(value);\r\n  // const firstCharacter = (x) => {\r\n  //   if (x) return x[0].toUpperCase();\r\n  //   return x;\r\n  // };\r\n\r\n  const [textSearch, setTextSearch] = useState('');\r\n\r\n  const menu = (\r\n    <Menu style={{ width: 200 }} className=\"mt-3 px-2\">\r\n      {userJobId === 1 && (\r\n        <Menu.Item>\r\n          <Link to=\"/admin/user\">\r\n            <h6>\r\n              <i className=\"fa fa-home mr-1\" />\r\n              Go page Admin\r\n            </h6>\r\n          </Link>\r\n        </Menu.Item>\r\n      )}\r\n      {userJobId === 2 && (\r\n        <h6 className=\"text-center text-black-50 mt-2\">Sinh Viên</h6>\r\n      )}\r\n      {userJobId === 3 && (\r\n        <h6 className=\"text-center text-black-50 mt-2\">Giảng Viên</h6>\r\n      )}\r\n      <Menu.Item>\r\n        <Link to=\"/profile\">\r\n          <h6>\r\n            <i className=\"fa fa-user mr-1\" />\r\n            {nameUser}\r\n          </h6>\r\n        </Link>\r\n      </Menu.Item>\r\n      {userJobId === 3 && (\r\n        <Menu.Item>\r\n          <Link to=\"/manager/course\">\r\n            <h6>\r\n              <i className=\"fa fa-bars mr-1\" />\r\n              Quản Lý \r\n            </h6>\r\n          </Link>\r\n        </Menu.Item>\r\n      )}\r\n      <Menu.Item>\r\n        <Link to=\"/\" onClick={logOut}>\r\n          <h6>\r\n            <i className=\"dropdown-icon mdi mdi-logout-variant fs-30 mr-1 leading-tight\" />\r\n            Đăng Xuất\r\n          </h6>\r\n        </Link>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const login_register = () => {\r\n    return (\r\n      <>\r\n        <li>\r\n          <div className=\"d-flex align-items-stretch \">\r\n            <div className=\"pt-btn-join \">\r\n              <Link to=\"/login\" className=\"btn-nocolor radius-xl\">\r\n                Đăng Nhập\r\n              </Link>\r\n            </div>\r\n            <div className=\"pt-btn-join\">\r\n              <Link to=\"/register\" className=\"btn-color radius-xl\">\r\n                Đăng Ký\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const changeSearch = event => {\r\n    setTextSearch(event.target.value);\r\n  }\r\n\r\n  const history = useHistory();\r\n  const handleOnClick = () => {\r\n    if(textSearch == '') { \r\n      Swal.fire(\r\n        'Tìm Kiếm',\r\n        'Vui lòng nhập thông tin cần tìm kiếm'\r\n      )\r\n    } else {\r\n      history.push(`/courses/search?keyword=${textSearch}`);\r\n      setTextSearch('');\r\n    }\r\n  };\r\n\r\n  const islogin = () => {\r\n    const tokenString = parseAccessToken(\r\n      localStorage.getItem(\"AcademyOnline_Token\")\r\n    );\r\n    if (tokenString) {\r\n      setTimeout(() => {\r\n        notification[\"warning\"]({\r\n          message: \"Phiên đăng nhập đã hết hạn vui lòng đăng nhập lại\",\r\n        });\r\n        logOut();\r\n      }, tokenString.exp * 1000 - Date.now());\r\n    }\r\n\r\n    return (\r\n      <>\r\n      { userJobId == 2 ?\r\n      <>\r\n        <li>\r\n          <Link to=\"/profile/FavorCourse\" className=\"text-white\">\r\n            <span className=\"h6\">\r\n              <i style={{ marginLeft: \"20px\" }} className=\"fa fa-heart-o\" /> Yêu\r\n              thích\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </>      \r\n      : <></>  \r\n      }\r\n        <li>\r\n          <Link to=\"/profile/RegisteredCourse\" className=\"text-white\">\r\n            <span className=\"h6\">\r\n              <i\r\n                style={{ marginLeft: \"20px\" }}\r\n                className=\"typcn typcn-chevron-right-outline\"\r\n              />{\" \"}\r\n              Khóa học của tôi\r\n            </span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Dropdown overlay={menu}>\r\n            <Link\r\n              className=\"ant-dropdown-link text-white\"\r\n              to=\"/profile\"\r\n              onClick={profileUser}\r\n            >\r\n              <Avatar size=\"large\" src= { imageUser ? imageUser : \"https://res.cloudinary.com/dzyfkhpce/image/upload/v1616132109/OnlineAcademy/Avatar/avata_ywn2ea.png\" } />\r\n            </Link>\r\n          </Dropdown>\r\n        </li>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header className=\"header rs-nav header-transparent\">\r\n      <div className=\"top-bar\">\r\n        <div className=\"container\">\r\n          <div className=\"row d-flex justify-content-between\">\r\n            <div className=\"topbar-left\">\r\n              <div className=\"menu-logo\">\r\n                <Link to=\"/\">\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                    // {imageUser}\r\n                    className=\"logo\"\r\n                    alt=\"\"\r\n                  />\r\n                </Link>\r\n              </div>\r\n              <div className=\"ttr-search-input-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  placeholder=\"Tìm kiếm khóa học, lĩnh vực, ...\"\r\n                  className=\"ttr-search-input\"\r\n                  value={textSearch}\r\n                  onChange={changeSearch}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  name=\"search\"\r\n                  className=\"ttr-search-submit\"\r\n                  onClick={ () => handleOnClick() }>\r\n                    <i className=\"fa fa-search\" />\r\n                </button>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"topbar-right\">\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/courses\" className=\"text-white \">\r\n                    <span className=\"h6\">\r\n                      <i\r\n                        style={{ marginLeft: \"20px\" }}\r\n                        className=\"typcn typcn-point-of-interest-outline\"\r\n                      />{\" \"}\r\n                      Khóa Học\r\n                    </span>\r\n                  </Link>\r\n                </li>\r\n                {checkLocalStorage  ? islogin() : login_register()}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderCustomize;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Homepage.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Login\\Login.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Register\\Register.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\OTPComfirm\\OTP.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Profile.js",["282","283","284","285","286","287","288","289","290","291","292","293"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Slide\\Slide.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\ResetPassword\\ResetPassword.js",["294"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Alert,\r\n  message,\r\n} from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport { AppContext } from \"../../utils/AppContext\";\r\nimport { parseAccessToken_res } from \"../../utils/utils\";\r\n\r\nimport \"./resetPassword.scss\";\r\n\r\nconst ResetPassword = () => {\r\n  const {\r\n    setnameUser,\r\n    saveToken,\r\n    setCheckLocalStorage,\r\n    setCheckOTPConfim,\r\n  } = useContext(AppContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [authenticated, setAuthenticated] = useState(\"\");\r\n  const [passWord, setPassWord] = useState(\"\");\r\n  const [selectemail, setSelect] = useState(true);\r\n  // const [erroremail, setErrorSelect] = useState();\r\n  const [labelText, setLabelText] = useState(\"\");\r\n  const [otp, setOTP] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const handleInput = (event) => {\r\n    setUserName(event.target.value);\r\n  };\r\n  const handleInputPassword = (event) => {\r\n    setPassWord(event.target.value);\r\n  };\r\n  const inputNumber = (evt) => {\r\n    evt = evt ? evt : window.event;\r\n    var charCode = evt.which ? evt.which : evt.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 46) {\r\n      evt.preventDefault();\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const handleInputOTP = (values) => {\r\n    setOTP(values.target.value);\r\n  };\r\n  const resetPasswordUser = (values) => {\r\n    let temp = {\r\n      Email: userName,\r\n      Password: passWord,\r\n    };\r\n    AuthService()\r\n      .checkOTPDB(userId, otp)\r\n      .then((result) => {\r\n        if (result.data) {\r\n          AuthService()\r\n            .resetPassword(temp)\r\n            .then((result) => {\r\n              if (result.data) {\r\n                AuthService()\r\n                  .login(temp)\r\n                  .then((res) => {\r\n                    setnameUser(parseAccessToken_res(res.data).DislayName);\r\n\r\n                    saveToken(res.data);\r\n                    if (\r\n                      parseAccessToken_res(res.data).OTP_Confim.data[0] === 1\r\n                    ) {\r\n                      setCheckOTPConfim(true);\r\n                    } else {\r\n                      setCheckOTPConfim(false);\r\n                    }\r\n                    setCheckLocalStorage(true);\r\n                    history.replace(from);\r\n                  });\r\n              } else {\r\n              }\r\n            });\r\n        } else {\r\n          message.error(\"Mã OTP Không khớp\");\r\n        }\r\n      });\r\n  };\r\n  const selectEmail = () => {\r\n    let temp = {\r\n      Email: userName,\r\n    };\r\n    AuthService()\r\n      .checkEmail(temp)\r\n      .then((res) => {\r\n        setAuthenticated(res.data.authenticated);\r\n        if (res.data.authenticated === true) {\r\n          setUserId(res.data.user.UsersId);\r\n\r\n          setSelect(false);\r\n        } else {\r\n          setLabelText(<Alert message=\"Email is not exits !!\" type=\"error\" />);\r\n          setTimeout(() => setLabelText(), 3000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n  // const inputfocus = (elmnt) => {\r\n  //   if (elmnt.key === \"Delete\" || elmnt.key === \"Backspace\") {\r\n  //     const next = elmnt.target.tabIndex - 2;\r\n  //     if (next > -1) {\r\n  //       elmnt.target.form.elements[next].focus();\r\n  //     }\r\n  //   } else {\r\n  //     const next = elmnt.target.tabIndex;\r\n  //     if (next < 6) {\r\n  //       elmnt.target.form.elements[next].focus();\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"account-form-inner\">\r\n      <div className=\"account-container\">\r\n        <div className=\"heading-bx left\">\r\n          <h2 className=\"title-head\">\r\n            Reset password for your <span>Account</span>\r\n          </h2>\r\n        </div>\r\n        <Form>\r\n          <Form.Item\r\n            name=\"Email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Email!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Email\"\r\n              value={userName}\r\n              onChange={handleInput}\r\n            />\r\n          </Form.Item>\r\n          {!authenticated && <div className=\"errorText \">{labelText}</div>}\r\n\r\n          {!selectemail && (\r\n            <>\r\n              <Form.Item\r\n                style={{ display: \"block\" }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your OTP!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  tabIndex=\"1\"\r\n                  maxLength=\"6\"\r\n                  min={0}\r\n                  value={otp}\r\n                  className=\"mt-1 form-checkno\"\r\n                  onKeyPress={inputNumber}\r\n                  onChange={handleInputOTP}\r\n                  placeholder=\"Input OTP\"\r\n                />\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n          {authenticated && (\r\n            <Form.Item\r\n              style={{ display: \"block\" }}\r\n              name=\"Password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your new password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"New password\"\r\n                value={passWord}\r\n                onChange={handleInputPassword}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n          {selectemail && (\r\n            <Form.Item style={{ display: \"block\" }}>\r\n              <button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"btn login-form-button\"\r\n                onClick={selectEmail}\r\n              >\r\n                Send OTP to email\r\n              </button>\r\n            </Form.Item>\r\n          )}\r\n          {!selectemail && (\r\n            <Form.Item style={{ display: \"block\" }}>\r\n              <button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"btn login-form-button\"\r\n                onClick={resetPasswordUser}\r\n              >\r\n                Reset password\r\n              </button>\r\n            </Form.Item>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Products\\Products.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Layout\\Default.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Layout\\Auth.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Layout\\AdminBasic\\AdminBasic.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\ManagerUser.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\Source\\ManagerSource.js",["295","296","297","298","299","300","301"],"import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"video-react/dist/video-react.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Tabs, Spin, Row, Col, Input, Select } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\r\nimport { Player } from \"video-react\"; // PosterImage\r\nimport {\r\n  Image,\r\n  Video,\r\n  Transformation,\r\n  CloudinaryContext,\r\n} from \"cloudinary-react\";\r\nimport Source from \"./Source\";\r\nimport CategoryService from \"../../../services/category.service\";\r\nimport UserService from \"../../../services/user.service\";\r\nimport CategorygroupService from \"../../../services/categorygroup.service\";\r\n\r\nimport \"./ManagerSource.scss\";\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nconst ManagetUser = () => {\r\n  const [content, setContent] = useState();\r\n  const [editorState, seteditorState] = useState();\r\n  const [editorStateDraft, seteditorStateDraft] = useState();\r\n  const [datasource, setdatasource] = useState([]);\r\n  const [datasourceTemp, setdatasourceTemp] = useState([]);\r\n  const [listTeacher, setlistTeacher] = useState([]);\r\n  const [listCategoryGroup, setlistCategoryGroup] = useState([]);\r\n  const [timeLeft, setTimeLeft] = useState(1);\r\n\r\n  useEffect(() => {\r\n    APIgetAllCategory();\r\n    APIgetTeacher();\r\n    APIgetAllCategoryGroup();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setTimeLeft(null);\r\n    }\r\n\r\n    if (!timeLeft) return;\r\n    const intervalId = setInterval(() => {\r\n      setTimeLeft(timeLeft - 1);\r\n    }, 1000);\r\n    return () => clearInterval(intervalId);\r\n  }, [timeLeft]);\r\n\r\n  const APIgetAllCategory = () => {\r\n    CategoryService()\r\n      .getAllCategory()\r\n      .then(\r\n        (response) => {\r\n          setdatasource(response.data);\r\n          setdatasourceTemp(response.data);\r\n          // console.log(response.data)\r\n        },\r\n        (error) => {\r\n          const _content =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setContent(_content);\r\n        }\r\n      );\r\n  };\r\n  const onEditorStateChange = (editorState) => {\r\n    seteditorState(editorState);\r\n    console.log(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n    const contentBlock = htmlToDraft(\r\n      draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n    );\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n\r\n      seteditorStateDraft(editorState);\r\n    }\r\n  };\r\n\r\n  const renderSpin = () => {\r\n    return (\r\n      <div className=\"example\">\r\n        <Spin tip={`Loading ${timeLeft}s...`} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const txt_Changed = function (e) {\r\n    const temp = datasource.filter((item) =>\r\n      item.CategoryName.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    setdatasourceTemp(temp);\r\n  };\r\n\r\n  const APIgetTeacher = () => {\r\n    UserService()\r\n      .getAllUser()\r\n      .then(\r\n        (response) => {\r\n          const data = [];\r\n          for (let i = response.data.length - 1; i >= 0; i--) {\r\n            if (response.data[i].JobId === 3) {\r\n              data.push({\r\n                UsersId: response.data[i].UsersId,\r\n                DislayName: response.data[i].DislayName,\r\n              });\r\n            }\r\n          }\r\n          setlistTeacher(data);\r\n          console.log(data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  function onChangeTeacher(value) {\r\n    var temp;\r\n    if (value) {\r\n      temp = datasource.filter((item) =>\r\n        item.NameTeacher.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n    } else {\r\n      temp = datasource.filter((item) =>\r\n        item.NameTeacher.toLowerCase().includes(\"\")\r\n      );\r\n    }\r\n\r\n    setdatasourceTemp(temp);\r\n  }\r\n\r\n  function onChangeCategoryGroup(value) {\r\n    var temp;\r\n    if (value) {\r\n      temp = datasource.filter((item) =>\r\n        item.CategoryGroupName.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n    } else {\r\n      temp = datasource.filter((item) =>\r\n        item.CategoryGroupName.toLowerCase().includes(\"\")\r\n      );\r\n    }\r\n\r\n    setdatasourceTemp(temp);\r\n  }\r\n\r\n  const APIgetAllCategoryGroup = () => {\r\n    CategorygroupService()\r\n      .getAllCategorygroup()\r\n      .then(\r\n        (response) => {\r\n          setlistCategoryGroup(response.data);\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <h2>Khóa học</h2>\r\n        </Col>\r\n        <Col span={10}>\r\n          <Input\r\n            placeholder=\"Tên khóa học\"\r\n            // size=\"large\"\r\n            onChange={(e) => txt_Changed(e)}\r\n            prefix={\r\n              <SearchOutlined style={{ fontSize: \"16px\", color: \"#a3a3a3\" }} />\r\n            }\r\n            style={{ borderRadius: 8 }}\r\n            allowClear\r\n          />\r\n        </Col>\r\n\r\n        <Col span={3} className=\"ml-3\">\r\n          <Select\r\n            showSearch\r\n            allowClear\r\n            style={{ width: 200 }}\r\n            placeholder=\"Lọc theo giảng viên..\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChangeTeacher}\r\n            // onSearch={onSearchTeacher}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {listTeacher.map((item, index) => (\r\n              <Option key={index} value={item.DislayName}>\r\n                {item.DislayName}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n\r\n        <Col span={6} className=\"ml-3\">\r\n          <Select\r\n            showSearch\r\n            allowClear\r\n            style={{ width: 200 }}\r\n            placeholder=\"Lọc theo chuyên đề...\"\r\n            optionFilterProp=\"children\"\r\n            onChange={onChangeCategoryGroup}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {listCategoryGroup.map((item, index) => (\r\n              <Option key={index} value={item.CategoryGroupName}>\r\n                {item.CategoryGroupName}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n\r\n        <Col span={24} className=\"mt-5\">\r\n          {timeLeft ? (\r\n            renderSpin()\r\n          ) : (\r\n            <Source\r\n              datasource={datasourceTemp}\r\n              APIgetAllCategory={APIgetAllCategory}\r\n            ></Source>\r\n          )}\r\n        </Col>\r\n\r\n        <Col span={24}>\r\n          <Editor\r\n            editorState={editorState}\r\n            toolbarClassName=\"toolbarClassName\"\r\n            wrapperClassName=\"wrapperClassName\"\r\n            editorClassName=\"editorClassName\"\r\n            onEditorStateChange={onEditorStateChange}\r\n          />\r\n          <textarea\r\n            disabled\r\n            style={{ width: \"100%\" }}\r\n            value={\r\n              editorState &&\r\n              draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n            }\r\n          />\r\n          <Editor\r\n            editorState={editorStateDraft}\r\n            toolbarClassName=\"toolbarClassName\"\r\n            wrapperClassName=\"wrapperClassName\"\r\n            editorClassName=\"editorClassName\"\r\n          />\r\n\r\n          \r\n        </Col>\r\n      </Row>\r\n    </>\r\n    // <Tabs type=\"card\">\r\n    //   <TabPane tab=\"tab1\" key=\"1\">\r\n\r\n    //   </TabPane>\r\n    //   <TabPane tab=\"tab2\" key=\"2\">\r\n\r\n    //   </TabPane>\r\n    // </Tabs>\r\n  );\r\n};\r\n\r\nexport default ManagetUser;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Teacher\\Teacher.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Teacher\\Modal_Input_Teacher.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Icon\\index.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Teacher\\Modal_Edit_Teacher.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Student\\Student.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Student\\Modal_Edit_Student.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\User\\Student\\Modal_Input_Student.js",["302","303","304","305"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\categorygroup.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageYTN.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageXNN.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageDK.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Page\\PageMN.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\category.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\Source\\Source.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\CategoriesGroup\\ManagerCategoriesGroup.js",["306"],"import React, { useState, useEffect } from \"react\";\r\nimport { Image, Row, Col, Input, Button, Modal, notification } from \"antd\";\r\nimport {\r\n  SearchOutlined,\r\n  UnlockOutlined,\r\n  DeleteOutlined,\r\n  LockOutlined,\r\n  EditOutlined,\r\n  ExclamationCircleOutlined\r\n} from \"@ant-design/icons\";\r\nimport CategorygroupService from \"../../../services/categorygroup.service\";\r\nimport ModalForm from \"./Modal_Add_CategoryGroup\";\r\nimport ModalEdit from \"./Modal_Edit_CategoryGroup\";\r\n\r\nimport './ManagerCategoriesGroup.scss'\r\nimport { Link } from \"react-router-dom\";\r\nvar dateFormat = require(\"dateformat\");\r\nconst { confirm } = Modal;\r\n\r\nconst ManagetUser = () => {\r\n  const [Content, setContent] = useState()\r\n  const [dataRespon, setdataRespon] = useState([])\r\n  const [dataRespontemp, setdataRespontemp] = useState([])\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleModalEdit, setVisibleModalEdit] = useState(false);\r\n  const [categoryGroupEditModal, setcategoryGroupEditModal] = useState({});\r\n\r\n  useEffect(() => {\r\n    APIgetAllCategoryGroup();\r\n  }, []);\r\n\r\n  const APIgetAllCategoryGroup = () => {\r\n    CategorygroupService().getAllCategorygroup()\r\n      .then((response) => {\r\n        setdataRespon(response.data);\r\n        setdataRespontemp(response.data)\r\n      }, (error) => {\r\n        const _content =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        setContent(_content);\r\n      }\r\n      );\r\n  }\r\n  const txt_Changed = function (e) {\r\n    const temp = dataRespon.filter((item) =>\r\n      item.CategoryGroupName.toLowerCase().includes(e.target.value.toLowerCase())\r\n    );\r\n    setdataRespontemp(temp);\r\n  };\r\n  const onCreate = (values) => {\r\n    values.Created_at = dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\");\r\n    CategorygroupService().addCategorygroup(values)\r\n      .then((response) => {\r\n        notification[\"success\"]({\r\n          message: \"Hoàn Tất\",\r\n          description: \"Bạn đã thêm thành công\",\r\n        });\r\n        setVisible(false);\r\n        APIgetAllCategoryGroup();\r\n      }, (error) => {\r\n\r\n      }\r\n      );\r\n  };\r\n\r\n  function showDeleteConfirm(item) {\r\n    confirm({\r\n      title: `Bạn có chắc muốn xoá ${item.CategoryGroupName} ?`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"Delete\",\r\n      okType: \"danger\",\r\n      cancelText: \"Cancel\",\r\n      onOk() {\r\n        CategorygroupService().deleteSingleCatagoryGroup(item.CategoryGroupId)\r\n          .then((response) => {\r\n            if (response.status === 202) {\r\n              notification[\"error\"]({\r\n                message: \"Không Thành Công\",\r\n                description: response.data.message,\r\n              });\r\n            }\r\n            else {\r\n              APIgetAllCategoryGroup();\r\n              notification[\"success\"]({\r\n                message: \"Hoàn Tất\",\r\n                description: \"bạn đã xoá thành công\",\r\n              });\r\n            }\r\n\r\n          })\r\n          .catch(function (error) {\r\n            console.log(\"ERROR from server:\", error);\r\n          });\r\n      },\r\n      onCancel() { },\r\n    });\r\n  }\r\n  const handleProduct = (categoryGroup, setEnable, setDisable, upDatecategoryGroup) => {\r\n    if (setEnable === true) {\r\n      CategorygroupService()\r\n        .setSingleCategorygroup(categoryGroup.CategoryGroupId, {\r\n          ...categoryGroup,\r\n          IsActive: 1,\r\n        })\r\n        .then((response) => {\r\n          APIgetAllCategoryGroup();\r\n          notification[\"success\"]({\r\n            message: \"Hoàn Tất\",\r\n            description: \"Bạn đã sửa thành công\",\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"ERROR from server:\", error);\r\n        });\r\n    }\r\n    if (setDisable === true) {\r\n      CategorygroupService()\r\n        .setSingleCategorygroup(categoryGroup.CategoryGroupId, {\r\n          ...categoryGroup,\r\n          IsActive: 0,\r\n\r\n        })\r\n        .then((response) => {\r\n          APIgetAllCategoryGroup();\r\n          notification[\"success\"]({\r\n            message: \"Hoàn Tất\",\r\n            description: \"Bạn đã sửa thành công\",\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"ERROR from server:\", error);\r\n        });\r\n    }\r\n    if (upDatecategoryGroup === true) {\r\n      var id = categoryGroup.CategoryGroupId;\r\n      delete  categoryGroup.CategoryGroupId;\r\n      CategorygroupService()\r\n      .setSingleCategorygroup(id, {\r\n        ...categoryGroup\r\n      })\r\n      .then((response) => {\r\n        APIgetAllCategoryGroup();\r\n        notification[\"success\"]({\r\n          message: \"Hoàn Tất\",\r\n          description: \"Bạn đã sửa thành công\",\r\n        });\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"ERROR from server:\", error);\r\n      });\r\n    }\r\n  };\r\n  const onEdit = (values) => {\r\n    handleProduct(values, false, false, true);\r\n    setVisibleModalEdit(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24} >\r\n          <h2>Lĩnh vực</h2>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Input\r\n            placeholder=\"Tên lĩnh vực\"\r\n            size=\"large\"\r\n            onChange={(e) => txt_Changed(e)}\r\n            prefix={\r\n              <SearchOutlined style={{ fontSize: \"16px\", color: \"#a3a3a3\" }} />\r\n            }\r\n            style={{ borderRadius: 8 }}\r\n            allowClear\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Button\r\n            className=\"float-right btn btn-info\"\r\n            type=\"success\"\r\n            onClick={() => {\r\n              setVisible(true);\r\n            }}\r\n          >\r\n            + Thêm lĩnh vực\r\n          </Button>\r\n        </Col>\r\n\r\n        {dataRespontemp.map((item, index) => {\r\n          console.log(item.Image);\r\n          return (\r\n            <Col xs={24} sm={12} md={6} xl={5} className=\"mt-5 mx-3\" key={index}>\r\n              <div className=\"service-bx\">\r\n                <div className=\"action-box\">\r\n                  <Image\r\n                    src={item.Image}\r\n                  />\r\n                </div>\r\n                <div className=\"info-bx text-center\">\r\n                  <h4><Link to=\"#\">{item.CategoryGroupName}</Link></h4>\r\n                  {/* <Link to=\"#\" className=\"btn radius-xl\">View More</Link> */}\r\n                  <Button type=\"warning\"  shape=\"round\"\r\n                    onClick={() => {\r\n                      setVisibleModalEdit(true);\r\n                      setcategoryGroupEditModal(item);\r\n                    }}\r\n                    icon={<EditOutlined />} />\r\n                  {item.IsActive\r\n                    ? <Button type=\"primary\" className='mx-2' shape=\"round\"\r\n                      onClick={() => handleProduct(item, false, true, false)}\r\n                      icon={<UnlockOutlined />} />\r\n                    : <Button type=\"default\" className='mx-2' shape=\"round\"\r\n                      onClick={() => handleProduct(item, true, false, false)}\r\n\r\n                      icon={<LockOutlined />} />}\r\n                  <Button type=\"primary\" shape=\"round\" danger icon={<DeleteOutlined />} onClick={() => showDeleteConfirm(item)} />\r\n                </div>\r\n                {/* <div className=\"handle-btn text-center\">\r\n                 \r\n                </div> */}\r\n              </div>\r\n            </Col>\r\n          )\r\n        })}\r\n      </Row>\r\n      <ModalForm\r\n        visible={visible}\r\n        onCreate={onCreate}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n      <ModalEdit\r\n        visibleModalEdit={visibleModalEdit}\r\n        categoryGroupEditModal={categoryGroupEditModal}\r\n        onEdit={onEdit}\r\n        onCancel={() => {\r\n          setVisibleModalEdit(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManagetUser;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\CategoriesGroup\\Modal_Add_CategoryGroup.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Admin\\CategoriesGroup\\Modal_Edit_CategoryGroup.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\ChangeProfileUser.js",["307","308","309","310","311","312"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\ChangePassword.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\FavorCourse.js",["313"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\nimport UserService from \"../../../services/user.service\";\r\nimport CoursesList from \"../../../containers/Courses/CoursesList/CoursesList\"\r\n\r\nconst FavorCourse = () => {\r\n  const { userid } = useContext(AppContext);\r\n  const [favoriteCategory, setFavoriteCategory] = useState([]);\r\n  useEffect(() => {\r\n    UserService()\r\n      .getAllFavoriteCategory(userid)\r\n      .then((data) => {\r\n        if (data.data === false) {\r\n          setFavoriteCategory([]);\r\n        } else {\r\n          setFavoriteCategory(data.data);\r\n          console.log(data.data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile-head\">\r\n        <h3>Khóa Học Yêu Thích</h3>\r\n      </div>\r\n      <div className=\"courses-filter\">\r\n        <div className=\"clearfix\">\r\n          {favoriteCategory.length <= 0 ? (\r\n            <p className=\"mt-3 text-center\">Không có khóa học yêu thích nào</p>\r\n          ) : (\r\n            <div className=\"row\" >\r\n              <div className=\"col-lg-10 col-md-12 col-sm-8\" style={{margin:'0px auto'}}>\r\n                <CoursesList userid = { userid } categories = {favoriteCategory} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavorCourse;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\RegisteredCourse.js",["314","315","316","317","318","319"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\nimport UserService from \"../../../services/user.service\";\r\nimport CoursesList from \"../../../containers/Courses/CoursesList/CoursesList\"\r\n\r\nconst RegisteredCourse = () => {\r\n  const { userid } = useContext(AppContext);\r\n  const [filter, setFilter] = useState(undefined);\r\n  const [coursesUser, setCoursesUser] = useState([]);\r\n  const [coursesUserTemp, setCoursesUserTemp] = useState([]);\r\n\r\n  useEffect(() => {\r\n    UserService()\r\n      .getCategorysUser(userid)\r\n      .then((data) => {\r\n        if (data.data === false) {\r\n          setCoursesUser([]);\r\n        } else {\r\n          setFilter(undefined);\r\n          setCoursesUser(data.data);\r\n          setCoursesUserTemp(data.data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  function handClickAll() {\r\n    setFilter(undefined);\r\n    setCoursesUserTemp(coursesUser.slice());\r\n  }\r\n\r\n  function handClickDone() {\r\n    setFilter(1);\r\n    setCoursesUserTemp(coursesUser.slice().filter(data => (\r\n                          data.IsDone == 1 )))\r\n  }\r\n\r\n  function handClickNoDone() {\r\n    setFilter(0);\r\n    setCoursesUserTemp(coursesUser.slice().filter(data => (\r\n                          data.IsDone == 0 )))\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"profile-head\">\r\n        <h3>Khóa Học Đã Đăng Ký</h3>\r\n        <div className=\"feature-filters style1 ml-auto\">\r\n          <ul className=\"filters\" data-toggle=\"buttons\">\r\n            <li data-filter className=\"btn active\">\r\n              <input type=\"radio\" />\r\n              <a onClick={() => handClickAll() }><span>Tất cả</span></a> \r\n            </li>\r\n            <li data-filter=\"publish\" className=\"btn\">\r\n              <input type=\"radio\" />\r\n              <a onClick={() => handClickDone() }><span>Hoàn thành</span></a> \r\n            </li>\r\n            <li data-filter=\"pending\" className=\"btn\">\r\n              <input type=\"radio\" />\r\n              <a onClick={() => handClickNoDone() }><span>Chưa hoàn thành</span></a> \r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"courses-filter\">\r\n        <div className=\"clearfix\">\r\n          {coursesUserTemp.length <= 0 ? (\r\n            <p className=\"mt-3 text-center\">Bạn chưa đăng kí khóa học nào</p>\r\n          ) : (\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-10 col-md-12 col-sm-8\" style={{margin:'0px auto'}}>\r\n                <CoursesList filter= { filter } userid = {userid} categories = {coursesUserTemp} />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisteredCourse;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\CoursesDetail\\CoursesDetail.js",["320","321","322","323","324","325","326"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AppContext } from \"../../utils/AppContext\";\r\nimport {\r\n  useParams, Link\r\n} from \"react-router-dom\";\r\nimport CoursesServices from \"../../services/courses.service\";\r\nimport CoursesTokenServices from \"../../services/coursesToken.service\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { Breadcrumb, Button } from 'antd';\r\nimport Detail from \"./Detail/Detail\"\r\nimport Swal from  'sweetalert2'\r\n\r\nconst CoursesDetail = () => {\r\n\r\n    let { CategoryId } = useParams();\r\n    let {\r\n      userid\r\n    } = useContext(AppContext); \r\n    const [categories, setCategories] = useState('');\r\n    const [hide, setHide] = useState(0);\r\n    const [products, setProducts] = useState([]);\r\n    const id = CategoryId.split(\"-\",1);\r\n    useEffect(() => {\r\n\r\n      CoursesServices().CoursesDetail(id, userid != undefined ? userid : 0)\r\n        .then((response) => {\r\n          setCategories(response.data[0]);\r\n          setHide(response.data[0].IsRes);\r\n          setProducts(response.data);\r\n        }) \r\n    },[userid, hide]);\r\n\r\n    function handleClickRes() {\r\n      if(userid == undefined) {\r\n        Swal.fire(\r\n          'Vui lòng đăng nhập'\r\n        )\r\n      }\r\n      else {\r\n        UserService().getUserByID(userid).\r\n        then((response) => {\r\n          if( (categories.Price * (100-categories.Value) /100) > response.data.Point ) {\r\n            Swal.fire(\r\n              `Bạn cần nạp thêm học phí   (${ ((categories.Price * (100-categories.Value) /100) - response.data.Point).toLocaleString() }đ) để đăng ký khóa học`\r\n            )\r\n          }\r\n          else {\r\n            Swal.fire({\r\n              title: 'Bạn đồng ý đăng ký khóa học',\r\n              icon: 'question',\r\n              showCancelButton: true,\r\n              confirmButtonColor: '#3085d6',\r\n              cancelButtonColor: '#d33',\r\n              confirmButtonText: 'Đồng ý',\r\n              cancelButtonText: 'Hủy'\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                const values = {\r\n                  UsersId: userid,\r\n                  CategoryId: categories.CategoryId,\r\n                  CostEach : categories.Price * (100-categories.Value) /100\r\n                };\r\n                CoursesTokenServices().addRes(values).\r\n                  then((response) => {\r\n                    Swal.fire({\r\n                      icon: 'success',\r\n                      title: 'Bạn đăng ký khóa học thành công',\r\n                      showConfirmButton: false,\r\n                      timer: 1000\r\n                    })\r\n                  setHide(1);\r\n                }) \r\n              }\r\n            })\r\n          }\r\n            \r\n        })\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"page-content bg-white\">\r\n        <div className=\"content-block\">\r\n          <div className=\"section-area section-sp1\">\r\n            <div className=\"container\">\r\n              <div className=\"breadcrumb-row\">\r\n                <div className=\"container\">\r\n                  <div className=\"m-b20\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>\r\n                                <Link to=\"/\">Trang Chủ</Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                              <Link to= {`/courses/${categories.CategoryGroupId}-${categories.CategoryGroupName}` }> { categories.CategoryGroupName } </Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                              { categories.CategoryName } \r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>   \r\n                    </div>\r\n                </div>\r\n              </div>\r\n              {\r\n                hide == 0 ?\r\n                <div className=\"row d-flex flex-row-reverse\">\r\n                   <div className=\"col-lg-3 col-md-4 col-sm-12 m-b30\" >\r\n                    <div className=\"course-detail-bx\" >\r\n                      <div className=\"course-price\">\r\n                        { categories.Value > 0\r\n                          ? \r\n                          <> \r\n                              <del> { parseInt(categories.Price).toLocaleString() } đ </del>\r\n                              <h4>{ (categories.Price * (100-categories.Value) /100).toLocaleString()  } đ </h4> \r\n                            </>\r\n                          : <> \r\n                              <br></br><h4>{ parseInt(categories.Price).toLocaleString() } đ </h4> \r\n                            </> \r\n                        }\r\n                      </div>\t\r\n                      <div className=\"course-buy-now text-center\">\r\n                        <Button type=\"primary\" shape=\"round\"  onClick={() => handleClickRes()}>\r\n                           Đăng ký khóa học\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"teacher-bx\">\r\n                        <div className=\"teacher-info\">\r\n                          <div className=\"teacher-thumb\">\r\n                            <img src= { categories.Ava } />\r\n                          </div>\r\n                          <div className=\"teacher-name\">\r\n                            <h5>{ categories.DislayName }</h5>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cours-more-info\">\r\n                        <div style={{width:'50%' , textAlign:'center'}}>\r\n                          <h4> { categories.Rate }/5 <i className=\"fa fa-star\" style={{color:'#FFFF33'}} /></h4>  \r\n                          <span>{ categories.TotalRate } Đánh giá </span>\r\n                        </div>\r\n                        <div style={{width:'50%' , textAlign:'center'}}>\r\n                          <h4> { categories.QuanRes } <i className=\"fa fa-user\" /></h4>  \r\n                          <span>Đã đăng ký</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>   \r\n                  <div className=\"col-lg-9 col-md-8 col-sm-12\">\r\n                    <Detail  id = { id } categories={categories} products={products} />\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div className=\"row d-flex flex-row-reverse\">\r\n                  <div className=\"col-lg-12 col-md-8 col-sm-12\">\r\n                    <Detail  id = { id } categories={categories} products={products} />\r\n                  </div>\r\n                </div>\r\n              }\r\n          </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CoursesDetail\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\CoursesDetail\\Detail\\Detail.js",["327","328","329","330","331","332","333","334","335"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\nimport { Player } from 'video-react';\r\nimport Swal from 'sweetalert2'\r\nimport CoursesServices from \"../../../services/courses.service\";\r\nimport CoursesTokenServices from \"../../../services/coursesToken.service\";\r\nimport CommentCourses from \"../CommentCourses/CommentCourses\";\r\nimport moment from 'moment';\r\n\r\nvar dateFormat = require(\"dateformat\");\r\n\r\nconst Detail = (props) => {\r\n\r\n    let {\r\n        userid\r\n    } = useContext(AppContext);\r\n\r\n    const [iconLike, setIconLike] = useState(0);\r\n    const productView = [];\r\n    const products = props.products;\r\n\r\n    const quanRate = [props.categories.Rate1, props.categories.Rate2, props.categories.Rate3, props.categories.Rate4, props.categories.Rate5];\r\n\r\n    useEffect(() => {\r\n        setIconLike(props.categories.IsLike);\r\n    }, [props.categories]);\r\n\r\n    function handleClickNumberNo(product) {\r\n        if (props.categories.IsRes == 0) {\r\n            if (!product.Public) {\r\n                Swal.fire(\r\n                    'Yêu cầu sở hữu khóa học',\r\n                    'Vui lòng sở hữu khóa học để xem nội này'\r\n                )\r\n            }\r\n        }\r\n        else {\r\n            if (productView.indexOf(product.ProductId) < 0) {\r\n                CoursesServices().updateViewVideo(product.ProductId, product.Viewer + 1)\r\n                    .then(() => {\r\n                        productView.push(product.ProductId);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleClickLike() {\r\n        if (userid == undefined) {\r\n            Swal.fire(\r\n                'Vui lòng đăng nhập'\r\n            )\r\n        }\r\n        else {\r\n            if (iconLike == 0) {\r\n                const values = {\r\n                    UsersId: userid,\r\n                    CategoryId: props.categories.CategoryId,\r\n                    LikeTime: dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"),\r\n                    IsActive: true\r\n                };\r\n                CoursesTokenServices().addLike(values).\r\n                    then((response) => {\r\n                        setIconLike(1);\r\n                    })\r\n            }\r\n            else {\r\n                const values = {\r\n                    UsersId: userid,\r\n                    CategoryId: props.categories.CategoryId,\r\n                    LikeTime: dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"),\r\n                    IsActive: false\r\n                };\r\n                CoursesTokenServices().delLike(values).\r\n                    then((response) => {\r\n                        setIconLike(0);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* Image, Note, CategoryName */}\r\n            <div className=\"courses-post\" >\r\n                <div className=\"ttr-post-media media-effect\" >\r\n                    <img src={props.categories.Image} />\r\n                    <h6 style={{ margin: 10 }} >\r\n                        <a className=\"m-r10\" onClick={() => handleClickLike()} >\r\n                            {\r\n                                iconLike == 0 ?\r\n                                    <i className=\"fa fa-heart-o\" />\r\n                                    :\r\n                                    <i className=\"fa fa-heart\" />\r\n                            }\r\n                        </a>\r\n                        Thêm vào danh sách yêu thích\r\n                    </h6>\r\n                    <span> Cập nhật: {moment(props.categories.Update_At).format('DD/MM/YYYY')}</span>\r\n\r\n                </div>\r\n                <div className=\"ttr-post-info\">\r\n                    <div className=\"ttr-post-title \">\r\n                        <h2 className=\"post-title\"> {props.categories.CategoryName} </h2>\r\n                    </div>\r\n                    <div className=\"ttr-post-text\">\r\n                        <p style={{ textAlign: \"justif\" }} > {ReactHtmlParser(props.categories.Note)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Chi tiết khóa học */}\r\n\r\n            <div className=\"courese-overview m-b20\" >\r\n                <h4>Lợi ích từ khóa học</h4>\r\n                <ul className=\"list-checked primary\">\r\n                    {ReactHtmlParser(props.categories.Remark)}\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Nội dung bài học */}\r\n\r\n            <div className=\"m-b20\">\r\n                <h4>Bài học</h4>\r\n                {\r\n                    products.map((i, index) =>\r\n                        <div key={index} className=\"panel\">\r\n                            <div className=\"ttr-sidebar-navi\">\r\n                                <a onClick={() => handleClickNumberNo(i)} data-toggle=\"collapse\" href={`#${i.ProductId}`} className=\"ttr-material-button\" data-parent={`#${i.ProductId}`}>\r\n                                    <span className=\"ttr-icon\"> {i.Public ? <i className=\"fa fa-book\" /> : props.categories.IsRes ? <i className=\"fa fa-book\" /> : <i className=\"fa fa-lock\" />} </span>\r\n                                    <span className=\"ttr-label\">{`Bài ${i.NumberNo < 10 ? '0' + i.NumberNo : i.NumberNo}: ${i.ProductName}`}</span>\r\n                                    <span className=\"ttr-arrow-icon\"><i className=\"fa fa-angle-down\" /></span>\r\n                                </a>\r\n                            </div>\r\n                            <div id={i.Public ? i.ProductId : props.categories.IsRes ? i.ProductId : \"lock\"} className=\"acod-body collapse\">\r\n                                <Player>\r\n                                    <source src={i.Video} />\r\n                                </Player>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n            {/* Thông tin giảng viên */}\r\n\r\n            <div className=\"m-b30\">\r\n                <h4>Thông tin giảng viên</h4>\r\n                <div className=\"instructor-bx\">\r\n                    <div className=\"instructor-author\"  >\r\n                        <img src={props.categories.Ava} />\r\n                    </div>\r\n                    <div className=\"instructor-info\">\r\n                        <h3 className=\"m-t30\"> {props.categories.DislayName} </h3>\r\n                        {ReactHtmlParser(props.categories.TeacherNote)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Đánh giá */}\r\n            <CommentCourses quanRate={quanRate} categories={props.categories} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Detail\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\InfoTeacher.js",["336"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport UserService from \"../../../services/user.service\";\r\nimport AuthService from \"../../../services/auth.service\";\r\nimport Source from \"./Source\";\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\n\r\nconst InfoTeacher = () => {\r\n  const { userid, nameUser } = useContext(AppContext);\r\n  const [Note, setNote] = useState(\"\");\r\n  const [EditNote, setEditNote] = useState(false);\r\n  const [editorState, seteditorState] = useState();\r\n\r\n  useEffect(() => {\r\n    AuthService()\r\n      .getProfile({\r\n        userId: userid,\r\n      })\r\n      .then((res) => {\r\n        if(!res.data.user[0].TeacherNote)\r\n        {\r\n          res.data.user[0].TeacherNote = \" <p> <span className='text-danger'>Chưa có mô tả</span></p>\";\r\n        }\r\n        \r\n        setNote(res.data.user[0].TeacherNote);\r\n        const contentBlock = htmlToDraft(res.data.user[0].TeacherNote);\r\n        if (contentBlock) {\r\n          const contentState = ContentState.createFromBlockArray(\r\n            contentBlock.contentBlocks\r\n          );\r\n          const editorStatetemp = EditorState.createWithContent(contentState);\r\n          seteditorState(editorStatetemp);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onFinish = () => {\r\n    setEditNote(false);\r\n    UserService()\r\n      .setSingleUser(userid, { TeacherNote: Note })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n  const onEdit = () => {\r\n    setEditNote(true);\r\n  };\r\n  const onEditorStateChange = (editorState) => {\r\n    seteditorState(editorState);\r\n    setNote(draftToHtml(convertToRaw(editorState.getCurrentContent())));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile-head\">\r\n        <h3 className=\"mr-2\">{nameUser}</h3>\r\n        <Tooltip title=\"Chỉnh sửa thông tin\">\r\n          <Button shape=\"circle\" icon={<EditOutlined />} onClick={onEdit} />\r\n        </Tooltip>\r\n      </div>\r\n      <div className=\"profile-head\">\r\n        <h5 className=\"ml-4\">Thông tin</h5>\r\n      </div>\r\n      {EditNote ? (\r\n        <>\r\n          <div className=\"p-5 bg-white\">\r\n            <Editor\r\n              editorState={editorState}\r\n              toolbarClassName=\"toolbarClassName\"\r\n              wrapperClassName=\"wrapperClassName\"\r\n              editorClassName=\"editorClassName\"\r\n              onEditorStateChange={onEditorStateChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"profile-head\">\r\n            <button\r\n              type=\"primary\"\r\n              className=\"btn login-form-button\"\r\n              onClick={onFinish}\r\n            >\r\n              Thay đổi thông tin\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"profile-head\">\r\n          <div className=\"clearfix ml-4\">{ReactHtmlParser(Note)}</div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"profile-head\">\r\n        <h5 className=\"ml-4\">Danh sách khóa học</h5>\r\n      </div>\r\n      <div className=\"courses-filter\">\r\n        <div className=\"clearfix ml-4\">\r\n          <Source />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoTeacher;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Profile\\Handle\\Source.js",["337"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { List, Rate } from \"antd\";\r\nimport { formatMoney } from \"../../../utils/utils\";\r\nimport CategoryService from \"../../../services/category.service\";\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\n\r\nconst Source = () => {\r\n  const { userid } = useContext(AppContext);\r\n  const [datasource, setdatasource] = useState([]);\r\n  const APIgetCategoryByUserID = () => {\r\n    CategoryService()\r\n      .getCatagorybyUserID(userid)\r\n      .then(\r\n        (response) => {\r\n          setdatasource(response.data);\r\n        },\r\n        (error) => {}\r\n      );\r\n  };\r\n  useEffect(() => {\r\n    APIgetCategoryByUserID();\r\n  }, []);\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={{\r\n        onChange: (page) => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 5,\r\n      }}\r\n      dataSource={datasource}\r\n      renderItem={(item) => (\r\n        <div className=\"card-courses-list admin-courses\">\r\n          <div className=\"card-courses-media\">\r\n            <img src={item.categoryImage} alt=\"\" />\r\n          </div>\r\n          <div className=\"card-courses-full-dec\">\r\n            <div className=\"card-courses-title\">\r\n              <h4>{item.CategoryName}</h4>\r\n            </div>\r\n            <div className=\"card-courses-list-bx\">\r\n              <ul className=\"card-courses-view\">\r\n                <li className=\"card-courses-categories\">\r\n                  <h5>Categories</h5>\r\n                  <h4>{item.CategoryGroupName}</h4>\r\n                </li>\r\n                <li className=\"card-courses-categories\">\r\n                  <h5>Joiner</h5>\r\n                  <h4>\r\n                    {item.QuanRes} <i className=\"fa fa-user\" />\r\n                  </h4>\r\n                </li>\r\n                <li className=\"card-courses-review\">\r\n                  <h5>Review</h5>\r\n                  <Rate allowHalf disabled defaultValue={item.Rate} />{\" \"}\r\n                  {item.Rate}/5\r\n                </li>\r\n                <li className=\"card-courses-price\">\r\n                  <del>{formatMoney(item.Price)}</del>\r\n                  <h5 className=\"text-primary\">{formatMoney(item.Price)}</h5>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"row card-courses-dec\">\r\n              <div className=\"col-md-12\">\r\n                <h6 className=\"m-b10\">Course Description</h6>\r\n                <p>{item.Note}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Source;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category.js",["338"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, Button } from \"antd\";\r\nimport CategoryService from \"../../../services/category.service\";\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\nimport Source from \"./Source\";\r\nimport ModalAddCategory from \"./ModalAddCategory\";\r\n\r\nconst Courses = () => {\r\n  const { userid } = useContext(AppContext);\r\n\r\n  const [datasource, setdatasource] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    APIgetCategoryByUserID();\r\n  }, []);\r\n  const APIgetCategoryByUserID = () => {\r\n    CategoryService()\r\n      .getCatagorybyUserID(userid)\r\n      .then(\r\n        (response) => {\r\n          const temp = response.data.filter((item) => item.IsActive === 1);\r\n          setdatasource(temp);\r\n        },\r\n        (error) => {}\r\n      );\r\n  };\r\n\r\n  const onEdit = (values) => {\r\n    setLoading(true);\r\n    values.TeacherID = userid;\r\n    console.log(values);\r\n    if (values.Image) {\r\n      setTimeout(() => {\r\n        CategoryService()\r\n          .addCategory(values)\r\n          .then((res) => {\r\n            if (res.data) {\r\n              console.log(res.data);\r\n              APIgetCategoryByUserID();\r\n\r\n              setVisible(false);\r\n              setLoading(false);\r\n            }\r\n          })\r\n          .catch((err) => {});\r\n      }, 5000);\r\n    } else {\r\n      setTimeout(() => {\r\n        CategoryService()\r\n          .addCategory(values)\r\n          .then((res) => {\r\n            if (res.data) {\r\n              setVisible(false);\r\n              setLoading(false);\r\n              APIgetCategoryByUserID();\r\n            }\r\n          })\r\n          .catch((err) => {});\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div className=\"content-block\">\r\n        <div className=\"section-area section-sp1\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 col-md-4 col-sm-12\">\r\n                <div className=\"profile-bx text-center\">\r\n                  <div className=\"profile-tabnav\">\r\n                    <ul className=\"nav nav-tabs\">\r\n                      <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" data-toggle=\"tab\">\r\n                          <i className=\"ti-book\"></i>\r\n                          Quản Lý Khóa Học\r\n                        </Link>\r\n                      </li>\r\n                      {/* <li className=\"nav-item\">\r\n                        <Link\r\n                          className=\"nav-link \"\r\n                          data-toggle=\"tab\"\r\n                          //   onClick={() => setRender(\"RegisteredCourse\")}\r\n                        >\r\n                          <i className=\"ti-bookmark-alt\"></i>\r\n                          Quản Lý Video Khóa Học\r\n                        </Link>\r\n                      </li> */}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-9 col-md-4 col-sm-12\">\r\n                <Breadcrumb separator=\">\">\r\n                  <Breadcrumb.Item>\r\n                    <Link to=\"/\">Home</Link>\r\n                  </Breadcrumb.Item>\r\n                  <Breadcrumb.Item>Khóa Học</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"profile-content-bx\">\r\n                  <div className=\"tab-content\">\r\n                    <>\r\n                      <div class=\"profile-head row\">\r\n                        <h3 className=\"col-9\"> Quản Lý Khóa Học</h3>\r\n                        <div className=\"col-3 text-right\">\r\n                          <Button\r\n                            type=\"success\"\r\n                            shape=\"round\"\r\n                            onClick={() => {\r\n                              setVisible(true);\r\n                            }}\r\n                          >\r\n                            + Thêm Khóa Học\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"edit-profile\">\r\n                        <Source\r\n                          datasource={datasource}\r\n                          APIgetCategoryByUserID={APIgetCategoryByUserID}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModalAddCategory\r\n        visible={visible}\r\n        onEdit={onEdit}\r\n        loading={loading}\r\n        onCancel={() => {\r\n          setVisible(false);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Source.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\Detail.js",["339"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport {\r\n  Breadcrumb,\r\n  Modal,\r\n  Typography,\r\n  Button,\r\n  Popover,\r\n  notification,\r\n  Image,\r\n} from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { Player } from \"video-react\";\r\n\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport Icon, { IconCustom } from \"../../../../components/Icon\";\r\n\r\nimport CategoryService from \"../../../../services/category.service\";\r\nimport ProductService from \"../../../../services/product.service\";\r\nimport ModalEdit from \"./ModalEdit\";\r\nimport ModalEditProduct from \"./ModalEditProduct\";\r\nimport ModalAddProduct from \"./ModalAddProduct\";\r\n\r\nimport { changeTailURL, parseForm } from \"../../../../utils/utils\";\r\nconst { Text } = Typography;\r\nconst { confirm } = Modal;\r\n\r\nconst Detail = () => {\r\n  let { CategoryID } = useParams();\r\n  const [categories, setCategories] = useState();\r\n  const [sumvideo, setvSumvideo] = useState(0);\r\n  const [visible, setVisible] = useState(false);\r\n  const [visibleModalEditProduct, setvisibleModalEditProduct] = useState(false);\r\n  const [visibleModalAddProduct, setvisibleModalAddProduct] = useState(false);\r\n\r\n  const [ProductEdit, setProductEdit] = useState();\r\n  const [listProduct, setlistProduct] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingAdd, setLoadingAdd] = useState(false);\r\n  const [loadingEditCategory, setLoadingEditCategory] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getInfoCategoryByID();\r\n  }, []);\r\n\r\n  const getInfoCategoryByID = () => {\r\n    console.log(CategoryID.split(\"-\", 1));\r\n    CategoryService()\r\n      .getSingleCategory(CategoryID.split(\"-\", 1))\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          setCategories(response.data);\r\n        },\r\n        (error) => {}\r\n      );\r\n\r\n    ProductService()\r\n      .getProductByCategoryID(CategoryID.split(\"-\", 1))\r\n      .then((res) => {\r\n        setlistProduct(res.data);\r\n        console.log(res);\r\n        setvSumvideo(res.data.length);\r\n      })\r\n      .catch((err) => {});\r\n  };\r\n\r\n  const onEdit = (values) => {\r\n    setLoadingEditCategory(true);\r\n    const id = values.CategoryId;\r\n    delete values.CategoryId;\r\n    console.log(values);\r\n\r\n    if (values.Change) {\r\n      setTimeout(() => {\r\n        CategoryService()\r\n          .setSingleCategory_Teacher(id, values)\r\n          .then((res) => {\r\n            if (res.data) {\r\n              getInfoCategoryByID();\r\n              setVisible(false);\r\n              setLoadingEditCategory(false);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }, 10000);\r\n    } else {\r\n      setTimeout(() => {\r\n        CategoryService()\r\n          .setSingleCategory_Teacher(id, values)\r\n          .then((res) => {\r\n            if (res.data) {\r\n              getInfoCategoryByID();\r\n              setVisible(false);\r\n              setLoadingEditCategory(false);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }, 2000);\r\n    }\r\n  };\r\n  const onEditProduct = (values) => {\r\n    const id = values.ProductId;\r\n    delete values.ProductId;\r\n\r\n    if (values.ChangeFile) {\r\n      setLoading(true);\r\n\r\n      setTimeout(() => {\r\n        ProductService()\r\n          .setSingleProduct(id, parseForm(values))\r\n          .then((result) => {\r\n            if (result.data.message) {\r\n              getInfoCategoryByID();\r\n              setLoading(false);\r\n              setvisibleModalEditProduct(false);\r\n            }\r\n          })\r\n          .catch((err) => {});\r\n      }, 15000);\r\n    } else {\r\n      setLoading(true);\r\n\r\n      setTimeout(() => {\r\n        ProductService()\r\n          .setSingleProduct(id, parseForm(values))\r\n          .then((result) => {\r\n            if (result.data.message) {\r\n              getInfoCategoryByID();\r\n              setLoading(false);\r\n              setvisibleModalEditProduct(false);\r\n            }\r\n          })\r\n          .catch((err) => {});\r\n      }, 2000);\r\n    }\r\n  };\r\n  const onAddProduct = (values, form, setshowVideo, previewVideo) => {\r\n    if (values.File) {\r\n      setLoadingAdd(true);\r\n      values.CategoryID = CategoryID.split(\"-\", 1);\r\n      setTimeout(() => {\r\n        ProductService()\r\n          .addProduct(parseForm(values))\r\n          .then((result) => {\r\n            setLoadingAdd(false);\r\n            setvisibleModalAddProduct(false);\r\n            getInfoCategoryByID();\r\n            form.resetFields();\r\n            setshowVideo(false);\r\n            previewVideo();\r\n          })\r\n          .catch((err) => {});\r\n      }, 10000);\r\n    } else {\r\n      setLoadingAdd(true);\r\n      values.CategoryID = CategoryID.split(\"-\", 1);\r\n      setTimeout(() => {\r\n        ProductService()\r\n          .addProduct(parseForm(values))\r\n          .then((result) => {\r\n            console.log(result);\r\n            setLoadingAdd(false);\r\n            setvisibleModalAddProduct(false);\r\n            getInfoCategoryByID();\r\n            form.resetFields();\r\n            setshowVideo(false);\r\n            previewVideo();\r\n          })\r\n          .catch((err) => {});\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  function showDeleteConfirm(product) {\r\n    confirm({\r\n      title: `Bạn có chắc muốn xoá BÀI: ${product.ProductName} ?`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      okText: \"Delete\",\r\n      okType: \"danger\",\r\n      cancelText: \"Cancel\",\r\n      onOk() {\r\n        ProductService()\r\n          .deleteSingleProduct(product.ProductId)\r\n          .then((response) => {\r\n            console.log(response);\r\n            // if(response.data ===)\r\n            // {\r\n            getInfoCategoryByID();\r\n            notification[\"success\"]({\r\n              message: \"Hoàn Tất\",\r\n              description: \"bạn đã xoá thành công\",\r\n              placement: \"bottomRight\",\r\n            });\r\n            // }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(\"ERROR from server:\", error);\r\n          });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"page-content bg-white\">\r\n        <div class=\"breadcrumb-row\">\r\n          <div class=\"container\">\r\n            <Breadcrumb separator=\">\">\r\n              <Breadcrumb.Item>\r\n                <Link to=\"/\">Home</Link>\r\n              </Breadcrumb.Item>\r\n              <Breadcrumb.Item>\r\n                <Link to=\"/manager/course\">Quản Lý Khóa Học</Link>\r\n              </Breadcrumb.Item>\r\n              <Breadcrumb.Item>{CategoryID.split(\"-\", 2)[1]}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mt-5\">\r\n          {categories ? (\r\n            <div className=\"row d-flex flex-row-reverse\">\r\n              <div className=\"col-lg-3 col-md-4 col-sm-12 m-b30\">\r\n                <div className=\"course-detail-bx\">\r\n                  <div className=\"course-price\">\r\n                    <h3 className=\"text-red\">\r\n                      {parseInt(categories.Price).toLocaleString()} đ\r\n                    </h3>\r\n                    {categories.Completed ? (\r\n                      <Text type=\"success\" className=\"h4\">\r\n                        Hoàn Tất\r\n                      </Text>\r\n                    ) : (\r\n                      <Text type=\"warning\" className=\"h4\">\r\n                        Chưa Hoàn Tất\r\n                      </Text>\r\n                    )}\r\n                  </div>\r\n                  <h5 className=\"mt-1 text-center\">\r\n                    Video: {sumvideo}/{categories.VideoQuantity}\r\n                  </h5>\r\n                  <div class=\"text-center\">\r\n                    <h5>Danh mục</h5>\r\n                    <span>{categories.CategoryGroupName}</span>\r\n                  </div>\r\n                  <div className=\"course-buy-now text-center mt-3\">\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      onClick={() => {\r\n                        setVisible(true);\r\n                      }}\r\n                    >\r\n                      Chỉnh Sửa Khóa Học\r\n                    </Button>\r\n                  </div>\r\n                  <div class=\"teacher-bx  text-center\">\r\n                    <Button\r\n                      shape=\"round\"\r\n                      type=\"success\"\r\n                      onClick={() => {\r\n                        setvisibleModalAddProduct(true);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      + Thêm video\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-9 col-md-8 col-sm-12\">\r\n                <div className=\"courses-post\">\r\n                  <div className=\"ttr-post-media media-effect\">\r\n                    <Image src={categories.categoryImage}></Image>\r\n                  </div>\r\n                  <div className=\"ttr-post-info\">\r\n                    <div className=\"ttr-post-title \">\r\n                      <h2 className=\"post-title\">\r\n                        {\" \"}\r\n                        {categories.CategoryName}{\" \"}\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"ttr-post-text\">\r\n                      <p>{categories.Note}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"courese-overview m-b20\">\r\n                  <h2>Lợi ích từ khóa học</h2>\r\n                  {categories.Remark ? (\r\n                    ReactHtmlParser(categories.Remark)\r\n                  ) : (\r\n                    <p>\r\n                      <span className=\"text-danger\">Chưa có mô tả</span>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className=\"m-b20\">\r\n                  {/* <div className=\"float-left mr-5\">\r\n                  <h4>Bài học</h4>\r\n                </div>\r\n                <div className=\"ml-5\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    onClick={() => {\r\n                      setVisible(true);\r\n                    }}\r\n                  >\r\n                    Thêm video\r\n                  </Button>\r\n                </div> */}\r\n\r\n                  {listProduct.map((i) => (\r\n                    <div className=\"panel row\">\r\n                      <div className=\"ttr-sidebar-navi col-10\">\r\n                        <a\r\n                          data-toggle=\"collapse\"\r\n                          href={`#${i.ProductId}`}\r\n                          className=\"ttr-material-button\"\r\n                          data-parent={`#${i.ProductId}`}\r\n                        >\r\n                          <span className=\"ttr-icon\">\r\n                            <i className=\"fa fa-book\" />\r\n                          </span>\r\n                          <span className=\"ttr-label\">\r\n                            {`Bài ${\r\n                              i.NumberNo < 10 ? \"0\" + i.NumberNo : i.NumberNo\r\n                            }: ${i.ProductName}`}\r\n\r\n                            {i.Video ? (\r\n                              \"\"\r\n                            ) : (\r\n                              <span className=\"text-danger\">\r\n                                ( Bài học này chưa có video )\r\n                              </span>\r\n                            )}\r\n                          </span>\r\n                          <span className=\"ttr-arrow-icon\">\r\n                            <i className=\"fa fa-angle-down\" />\r\n                          </span>\r\n                        </a>\r\n                      </div>\r\n                      <div\r\n                        className=\"col-1 ttr-label \"\r\n                        style={{ alignSelf: \"center\" }}\r\n                      >\r\n                        {/* <Button\r\n                          onClick={() => {\r\n                            setProductEdit(i);\r\n                            setvisibleModalEditProduct(true);\r\n                          }}\r\n                        >\r\n                          <Icon component={IconCustom.Edit} />\r\n                          Edit\r\n                        </Button> */}\r\n                        <Popover\r\n                          placement=\"bottomRight\"\r\n                          content={\r\n                            <div className=\"my-popover-container\">\r\n                              <Button\r\n                                className=\"my-btn-no-style my-popover-item\"\r\n                                onClick={() => {\r\n                                  setProductEdit(i);\r\n                                  setvisibleModalEditProduct(true);\r\n                                }}\r\n                              >\r\n                                <Icon\r\n                                  component={IconCustom.Edit}\r\n                                  className=\"my-icon-md\"\r\n                                />\r\n                                Sửa video\r\n                              </Button>\r\n                              <Button\r\n                                className=\"my-btn-no-style my-popover-item\"\r\n                                onClick={() => showDeleteConfirm(i)}\r\n                              >\r\n                                <Icon\r\n                                  component={IconCustom.Trash}\r\n                                  className=\"my-icon-md\"\r\n                                />\r\n                                Xóa video\r\n                              </Button>\r\n                            </div>\r\n                          }\r\n                          trigger=\"focus\"\r\n                        >\r\n                          <Button className=\"my-btn-no-style btn-icon text-dark-gray\">\r\n                            <Icon component={IconCustom.MoreHorizontal} />\r\n                          </Button>\r\n                        </Popover>\r\n                      </div>\r\n                      <div\r\n                        id={i.ProductId}\r\n                        className=\"acod-body collapse col-12\"\r\n                      >\r\n                        {i.Video ? (\r\n                          <Player\r\n                            poster={changeTailURL(i.Video)}\r\n                            src={i.Video}\r\n                          />\r\n                        ) : (\r\n                          <h5 className=\"text-danger\">\r\n                            {\" \"}\r\n                            Bài học này chưa có video\r\n                          </h5>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <ModalEdit\r\n                visible={visible}\r\n                categories={categories}\r\n                onEdit={onEdit}\r\n                loadingEditCategory={loadingEditCategory}\r\n                onCancel={() => {\r\n                  setVisible(false);\r\n                }}\r\n              />\r\n\r\n              <ModalEditProduct\r\n                visibleModalEditProduct={visibleModalEditProduct}\r\n                onEditProduct={onEditProduct}\r\n                ProductEdit={ProductEdit}\r\n                loading={loading}\r\n                onCancel={() => {\r\n                  setvisibleModalEditProduct(false);\r\n                }}\r\n              />\r\n              <ModalAddProduct\r\n                visibleModalAddProduct={visibleModalAddProduct}\r\n                onAddProduct={onAddProduct}\r\n                loadingAdd={loadingAdd}\r\n                onCancel={() => {\r\n                  setvisibleModalAddProduct(false);\r\n                }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\product.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\ModalEdit.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Courses\\Courses.js",["340","341","342"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport CoursesServices from \"../../services/courses.service\";\r\nimport {\r\n    useParams, Link\r\n} from \"react-router-dom\";\r\nimport CoursesList from './CoursesList/CoursesList'\r\nimport { Breadcrumb, Menu, Dropdown } from 'antd';\r\nimport { AppContext } from \"../../utils/AppContext\";\r\n\r\nconst Courses = (props) => {\r\n\r\n    let { CategoryGroup } = useParams();\r\n\r\n    let { userid } = useContext(AppContext);\r\n\r\n    const keyId = String(CategoryGroup === undefined ? '0' : CategoryGroup.indexOf('search') > - 1 ? '0' : CategoryGroup.split(\"-\")[0]);\r\n    const defaultName = CategoryGroup === undefined ? '' : CategoryGroup.indexOf('search') > - 1 ? '' : ` > ${CategoryGroup.split(\"-\")[1]}`;\r\n\r\n    const [categoryGroup, setCategoryGroup] = useState([]);\r\n    const [CategoryGroupName, setCategoryGroupName] = useState(defaultName);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoriesTemp, setCategoriesTemp] = useState([]);\r\n    const [coursesList, setCoursesList] = useState(<CoursesList userid={userid} categories={categories} />)\r\n    const [valueInputSearch, setValueInputSearch] = useState('');\r\n    const [textSort, SetTextSort] = useState('');\r\n\r\n    useEffect(() => {\r\n        //Lọc List ALL CategoryGroup\r\n\r\n        CoursesServices().CategoryGroup()\r\n            .then((response) => {\r\n                setCategoryGroup(response.data);\r\n            });\r\n        SetTextSort('');\r\n        //Lọc List Category\r\n        if (keyId > 0) {\r\n            CoursesServices().getCategoryByGroupId(keyId, userid != undefined ? userid : 0)\r\n                .then((response) => {\r\n                    setCategories(response.data);\r\n                    setCategoryGroupName(defaultName);\r\n                    setCoursesList(<CoursesList userid={userid} categories={response.data} />);\r\n                });\r\n        }\r\n        else {\r\n            CoursesServices().getCategoryAllGroup(userid != undefined ? userid : 0)\r\n                .then((response) => {\r\n                    const searchkey = new URLSearchParams(props.location.search).get('keyword');\r\n                    const keyword = searchkey === null ? '' : searchkey;\r\n                    setCategoryGroupName('');\r\n                    setValueInputSearch(keyword);\r\n                    setCategoriesTemp(response.data.filter(data => (\r\n                        xoa_dau(data.CategoryGroupName).indexOf(xoa_dau(keyword)) > - 1\r\n                        || xoa_dau(data.CategoryName).indexOf(xoa_dau(keyword)) > - 1\r\n                        || xoa_dau(data.DislayName).indexOf(xoa_dau(keyword)) > - 1)));\r\n\r\n                    setCategories(response.data);\r\n                    setCoursesList(<CoursesList userid={userid} categories={\r\n                        response.data.filter(data => (\r\n                            xoa_dau(data.CategoryGroupName).indexOf(xoa_dau(keyword)) > - 1\r\n                            || xoa_dau(data.CategoryName).indexOf(xoa_dau(keyword)) > - 1\r\n                            || xoa_dau(data.DislayName).indexOf(xoa_dau(keyword)) > - 1))} />);\r\n                });\r\n        }\r\n\r\n\r\n    }, [props.location.search, userid]);\r\n\r\n    function xoa_dau(str) {\r\n        str = str.toLowerCase(str);\r\n        str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n        str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n        str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n        str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n        str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n        str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n        str = str.replace(/đ/g, \"d\");\r\n        return str;\r\n    }\r\n\r\n    const handleClickCategoryGroupName = (val) => {\r\n        const id = val === 0 ? 0 : val.CategoryGroupId;\r\n        SetTextSort('');\r\n        setValueInputSearch('');\r\n        if (id > 0) {\r\n            CoursesServices().getCategoryByGroupId(id)\r\n                .then((response) => {\r\n                    setCategories(response.data);\r\n                    setCategoriesTemp(response.data);\r\n                    setCategoryGroupName(`> ${val.CategoryGroupName}`);\r\n                    setCoursesList(<CoursesList userid={userid} categories={response.data} />);\r\n                });\r\n        }\r\n\r\n        else {\r\n            CoursesServices().getCategoryAllGroup()\r\n                .then((response) => {\r\n                    const searchkey = new URLSearchParams(props.location.search).get('keyword');\r\n                    const keyword = searchkey === null ? '' : searchkey;\r\n                    setValueInputSearch(keyword);\r\n                    setCategoryGroupName('');\r\n                    setCategoriesTemp(response.data.filter(data => (\r\n                        xoa_dau(data.CategoryGroupName).indexOf(xoa_dau(keyword)) > - 1\r\n                        || xoa_dau(data.CategoryName).indexOf(xoa_dau(keyword)) > - 1\r\n                        || xoa_dau(data.DislayName).indexOf(xoa_dau(keyword)) > - 1)));\r\n                    setCategories(response.data);\r\n                    setCoursesList(<CoursesList userid={userid} categories={\r\n                        response.data.filter(data => (\r\n                            xoa_dau(data.CategoryGroupName).indexOf(xoa_dau(keyword)) > - 1\r\n                            || xoa_dau(data.CategoryName).indexOf(xoa_dau(keyword)) > - 1\r\n                            || xoa_dau(data.DislayName).indexOf(xoa_dau(keyword)) > - 1))} />);\r\n                });\r\n        }\r\n    }\r\n\r\n    const changeSearch = event => {\r\n        setValueInputSearch(event.target.value);\r\n        if (event.target.value === '') {\r\n            setCategoriesTemp([]);\r\n        }\r\n        if (categories.length > 0) {\r\n            SetTextSort('');\r\n            setCategoriesTemp(categories.slice().filter(data =>\r\n                xoa_dau(data.CategoryName).indexOf(xoa_dau(event.target.value)) > -1));\r\n\r\n            setCoursesList(<CoursesList userid={userid} categories={categories.filter(data =>\r\n                xoa_dau(data.CategoryName).indexOf(xoa_dau(event.target.value)) > -1)} />);\r\n        }\r\n\r\n    }\r\n\r\n    const menu = (\r\n        <Menu >\r\n            <Menu.Item onClick={() => handClickSortPriceCT()} > Giá cao đến thấp </Menu.Item>\r\n            <Menu.Item onClick={() => handClickSortPriceTC()}>Giá thấp đến cao</Menu.Item>\r\n            <Menu.Item onClick={() => handClickSortLike()}>Yêu thích nhất</Menu.Item>\r\n            <Menu.Item onClick={() => handClickSortRate()}>Đánh giá cao nhất</Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n    const handClickSortPriceCT = () => {\r\n        const categoriesTempSort = categoriesTemp.length > 0 ? categoriesTemp.slice() : categories.slice();\r\n        setCoursesList(<CoursesList userid={userid} categories={categoriesTempSort.sort(function (a, b) { return a.Price > b.Price ? -1 : a.Price < b.Price ? 1 : 0 })} />);\r\n        SetTextSort(': Giá cao đến thấp')\r\n    }\r\n    const handClickSortPriceTC = () => {\r\n        const categoriesTempSort = categoriesTemp.length > 0 ? categoriesTemp.slice() : categories.slice();\r\n        setCoursesList(<CoursesList userid={userid} categories={categoriesTempSort.slice().sort(function (a, b) { return a.Price < b.Price ? -1 : a.Price > b.Price ? 1 : 0 })} />);\r\n        SetTextSort(': Giá thấp đến cao')\r\n    }\r\n    const handClickSortLike = () => {\r\n        const categoriesTempSort = categoriesTemp.length > 0 ? categoriesTemp.slice() : categories.slice();\r\n        setCoursesList(<CoursesList userid={userid} categories={categoriesTempSort.slice().sort(function (a, b) { return a.QuanLike > b.QuanLike ? -1 : a.QuanLike < b.QuanLike ? 1 : 0 })} />);\r\n        SetTextSort(': Yêu thích nhất')\r\n    }\r\n    const handClickSortRate = () => {\r\n        const categoriesTempSort = categoriesTemp.length > 0 ? categoriesTemp.slice() : categories.slice();\r\n        setCoursesList(<CoursesList userid={userid} categories={categoriesTempSort.slice().sort(function (a, b) { return a.Rate > b.Rate ? -1 : a.Rate < b.Rate ? 1 : 0 })} />);\r\n        SetTextSort(': Đánh giá cao nhất')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"content-block\">\r\n            <div className=\"section-area section-sp1\">\r\n                <div className=\"container\">\r\n                    <div className=\"m-b20\">\r\n                        <Breadcrumb>\r\n                            <Breadcrumb.Item>\r\n                                <Link to=\"/\">Trang Chủ</Link>\r\n                            </Breadcrumb.Item>\r\n                            <Breadcrumb.Item>\r\n                                Khóa Học   {CategoryGroupName}\r\n                            </Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-4 col-sm-12 m-30\">\r\n                            <div className=\"widget courses-search-bx placeani\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group\">\r\n                                        <input name=\"dzName\" placeholder=\"Tìm kiếm khóa học...\" value={valueInputSearch} type=\"text\" required className=\"form-control\" onChange={changeSearch} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"widget widget_archive\">\r\n                                <h5 className=\"widget-title style-1\">Lĩnh Vực</h5>\r\n                                <Menu defaultSelectedKeys={[keyId]} theme=\"dark\">\r\n                                    <Menu.Item key=\"0\" onClick={() => handleClickCategoryGroupName(0)}>\r\n                                        <Link to={`/courses`} >\r\n                                            Tất cả Lĩnh vực\r\n                                    </Link>\r\n                                    </Menu.Item>\r\n                                    {\r\n                                        categoryGroup.map((val, index) =>\r\n                                            <Menu.Item key={val.CategoryGroupId} onClick={() => handleClickCategoryGroupName(val)} >\r\n                                                <Link to={`/courses/${val.CategoryGroupId}-${val.CategoryGroupName}`}>\r\n                                                    {val.CategoryGroupName}\r\n                                                </Link>\r\n                                            </Menu.Item>\r\n                                        )\r\n                                    }\r\n                                </Menu>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-8 col-sm-12\">\r\n                            <Dropdown overlay={menu} trigger={['click']} >\r\n                                <span style={{ fontWeight: 'bold', fontSize: 15, lineHeight: '50px', textAlign: 'right' }} > <i className=\"ti-bar-chart\" /> Sắp xếp  {textSort} </span>\r\n                            </Dropdown>\r\n                            {coursesList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Courses\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\Courses\\CoursesList\\CoursesList.js",["343","344","345","346","347","348","349","350","351"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Pagination, Checkbox } from 'antd';\r\nimport { useEffect } from \"react\";\r\nimport CoursesTokenServices from \"../../../services/coursesToken.service\";\r\nvar dateFormat = require(\"dateformat\");\r\n\r\nconst CoursesList = (props) => {\r\n\r\n    const numEachPage = 6;\r\n    const [minValue, setMinValue] = useState(0);\r\n    const [maxValue, setMaxValue] = useState(numEachPage);\r\n    const [categories, setCategories] = useState(props.categories.slice());\r\n\r\n\r\n    useEffect(() => {\r\n        setMinValue(0);\r\n        setMaxValue(numEachPage);\r\n        setCategories(props.categories.slice());\r\n    }, [props.categories])\r\n\r\n    const handleChange = (value) => {\r\n        setMinValue((value - 1) * numEachPage);\r\n        setMaxValue(value * numEachPage);\r\n    };\r\n\r\n    const handleClickUnlike = (CategoryId) => {\r\n        const values = {\r\n            UsersId: props.userid,\r\n            CategoryId: CategoryId,\r\n            LikeTime: dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"),\r\n            IsActive: false\r\n        };\r\n        CoursesTokenServices().delLike(values).\r\n            then((response) => {\r\n                setCategories(categories.filter(data => (\r\n                    data.CategoryId != CategoryId)))\r\n                setMinValue(0);\r\n                setMaxValue(numEachPage);\r\n            })\r\n    }\r\n\r\n    function onChange(e) {\r\n        if (e.target.checked === true) {\r\n            const values = {\r\n                UsersId: props.userid,\r\n                CategoryId: e.target.id,\r\n                IsDone: true\r\n            };\r\n            CoursesTokenServices().updateDoneRes(values).\r\n                then((response) => {\r\n                    if (props.filter !== undefined) {\r\n                        setCategories(categories.filter(data => (\r\n                            data.CategoryId != e.target.id)))\r\n                    }\r\n                    categories[categories.findIndex(value => value.CategoryId === e.target.id)].IsDone = 1;\r\n                })\r\n\r\n        }\r\n        else {\r\n            const values = {\r\n                UsersId: props.userid,\r\n                CategoryId: e.target.id,\r\n                IsDone: false\r\n            };\r\n            CoursesTokenServices().updateDoneRes(values).\r\n                then((response) => {\r\n                    if (props.filter !== undefined) {\r\n                        setCategories(categories.filter(data => (\r\n                            data.CategoryId != e.target.id)))\r\n                    }\r\n                    categories[categories.findIndex(value => value.CategoryId === e.target.id)].IsDone = 0;\r\n                })\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                categories.length == 0\r\n                    ?\r\n                    <div style={{ fontSize: '50px', textAlign: 'center' }}>\r\n                        <i className=\"fa fa-search\" />\r\n                        <h1> Không tìm thấy khóa học nào </h1>\r\n                    </div>\r\n                    :\r\n                    <div className=\"row\">\r\n                        {\r\n                            categories.slice(minValue, maxValue).map((val) =>\r\n                                <div key={val.CategoryId} className=\"col-md-6 col-lg-4 col-sm-6 m-b30\">\r\n                                    <div className=\"cours-bx\">\r\n                                        <div className=\"action-box\">\r\n                                            <Link to={`/courses/${val.CategoryGroupId}-${val.CategoryGroupName}/${val.CategoryId}-${val.CategoryName}`} >\r\n                                                <img src={val.Image} />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"info-bx text-center\" style={{ height: '125px' }}>\r\n                                            <h5><Link to={`/courses/${val.CategoryGroupId}-${val.CategoryGroupName}/${val.CategoryId}-${val.CategoryName}`} >{val.CategoryName}</Link></h5>\r\n                                            <span> {val.CategoryGroupName} </span>\r\n                                            {props.unlikeUserId ?\r\n                                                <span style={{ color: 'red', fontWeight: 'bold', bottom: 5, position: 'absolute', left: 5 }} >\r\n                                                    <Button type=\"primary\" shape=\"round\" onClick={() => handleClickUnlike(val.CategoryId)}>\r\n                                                        Gỡ yêu thích\r\n                                            </Button>\r\n                                                </span>\r\n                                                :\r\n                                                <></>\r\n                                            }\r\n                                            <span style={{ color: 'red', fontWeight: 'bold', bottom: 5, position: 'absolute', right: 5 }} > <i className=\"fa fa-user\" /> : {val.DislayName} </span>\r\n                                        </div>\r\n                                        <div className=\"cours-more-info\">\r\n                                            <div className=\"review\">\r\n                                                <div>Like: {val.QuanLike} <i className=\"fa fa-heart\" /> </div>\r\n                                                <div>Rate: {val.Rate}/5 <i className=\"fa fa-star\" style={{ color: '#FFFF33' }} />  </div>\r\n                                            </div>\r\n                                            {\r\n                                                val.IsRes ?\r\n                                                    <div className=\"price\">\r\n                                                        <div className=\"text-center\">Đã đăng ký</div>\r\n                                                        <div className=\"text-center\">\r\n                                                            <Checkbox id={val.CategoryId} onChange={onChange} defaultChecked={val.IsDone} className=\"text-center\" style={{ fontSize: 12 }} >Hoàn thành</Checkbox>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"price\">\r\n                                                        {\r\n                                                            val.value != null\r\n                                                                ? <>\r\n                                                                    <del> {parseInt(val.Price).toLocaleString()} đ </del>\r\n                                                                    <h5>{(val.Price * (100 - val.value) / 100).toLocaleString()} đ </h5>\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <br></br><h5>{parseInt(val.Price).toLocaleString()} đ </h5>  </>\r\n                                                        }\r\n                                                    </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            categories.length == 0\r\n                                ?\r\n                                <></>\r\n                                :\r\n                                <div className=\"col-lg-12 m-b20\"  >\r\n                                    <div className=\"pagination-bx rounded-sm gray clearfix\" >\r\n                                        <Pagination defaultCurrent={1}\r\n                                            style={{ textAlign: 'center' }}\r\n                                            defaultPageSize={numEachPage}\r\n                                            onChange={handleChange} total={categories.length} />\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CoursesList\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\ModalEditProduct.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\Category_Detail\\ModalAddProduct.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\User\\Teacher\\ModalAddCategory.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\courses.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\serivces.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\home.service.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\containers\\CoursesDetail\\CommentCourses\\CommentCourses.js",["352","353","354","355","356","357"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AppContext } from \"../../../utils/AppContext\";\r\nimport { List, Avatar, Rate, Input, Button } from \"antd\";\r\nimport Swal from 'sweetalert2'\r\nimport CoursesServices from \"../../../services/courses.service\";\r\nimport CoursesTokenServices from \"../../../services/coursesToken.service\";\r\nimport moment from 'moment';\r\n\r\nconst CommentCourses = (props) => {\r\n\r\n  let {\r\n    userid\r\n  } = useContext(AppContext);\r\n\r\n  const { TextArea } = Input;\r\n\r\n  const [data, setData] = useState([]);\r\n  const [valueText, setValueText] = useState('');\r\n  const [valueRate, setValueRate] = useState(0);\r\n  const [hide, setHide] = useState(0);\r\n\r\n  useEffect(() => {\r\n    CoursesServices().getRateDetailByCategoryId(props.categories.CategoryId)\r\n      .then((res) => {\r\n        setHide(props.categories.IsCmt);\r\n        setData(res.data);\r\n      })\r\n  }, [props.categories, hide])\r\n  function handleClickCmt() {\r\n    if (valueText == '') {\r\n      Swal.fire(\r\n        'Vui lòng nhập nội dung'\r\n      )\r\n    }\r\n    else if (valueRate == 0) {\r\n      Swal.fire(\r\n        'Bạn quên đánh giá kìa :( '\r\n      )\r\n    }\r\n    else {\r\n      const values = {\r\n        UsersId: userid,\r\n        CategoryId: props.categories.CategoryId,\r\n        RateValue: valueRate,\r\n        Cmt: valueText\r\n      };\r\n      CoursesTokenServices().addCmt(values).\r\n        then((response) => {\r\n          setHide(1);\r\n          Swal.fire(\r\n            'Cảm ơn bạn đã góp ý ^^'\r\n          )\r\n        })\r\n    }\r\n  }\r\n\r\n  const changeInputText = event => {\r\n    setValueText(event.target.value);\r\n  }\r\n\r\n  const changeRate = event => {\r\n    setValueRate(event);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <h4>Đánh giá</h4>\r\n      <div className=\"review-bx\">\r\n        <div className=\"all-review\">\r\n          <h2 className=\"rating-type\">\r\n            {data.length > 0 ? data.map(item => item.RateValue).reduce((prev, next) => prev + next) / data.length : 0}/5 <i className=\"fa fa-star\" style={{ color: '#FFFF33' }} />\r\n          </h2>\r\n          <span>{data.length} Đánh giá </span>\r\n        </div>\r\n        <div className=\"review-bar\">\r\n          {\r\n            props.quanRate.map((i, index) =>\r\n              <div key={index} className=\"bar-bx\">\r\n                <div className=\"side\">\r\n                  <div>{index + 1} star</div>\r\n                </div>\r\n                <div className=\"middle\">\r\n                  <div className=\"bar-container\">\r\n                    <div className=\"bar-5\" style={{ width: props.categories.TotalRate == 0 ? 0 : (i * 100 / props.categories.TotalRate) + '%' }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"side right\">\r\n                  <div> {i}</div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n      <div style={{ position: 'relative' }}>\r\n        {\r\n          props.categories.IsRes > 0 && hide == 0 ?\r\n            <>\r\n              <div className=\"m-b10\">\r\n                <TextArea value={valueText} onChange={changeInputText} rows={4} placeholder=\"Mời bạn để lại bình luận\" />\r\n              </div>\r\n              <div className=\"m-t10 m-b20\" >\r\n                <span style={{ right: 150, position: 'absolute', fontWeight: 'bold' }}>  Đánh giá: <Rate value={valueRate} onChange={changeRate} /></span>\r\n                <Button type=\"primary\" shape=\"round\" style={{ right: 0, position: 'absolute' }} onClick={() => handleClickCmt()}>\r\n                  Gửi bình luận\r\n                  </Button>\r\n\r\n              </div>\r\n            </>\r\n            :\r\n            hide == 1 ?\r\n              <h5 className=\"text-center\">Bạn đã đánh giá {props.categories.RateValue} <i className=\"fa fa-star\" style={{ color: 'red' }} /> cho khóa học này</h5>\r\n              :\r\n              <></>\r\n        }\r\n        <div className=\"m-t50\">{\r\n          data.length > 0\r\n            ?\r\n            <List className=\"m-t20\"\r\n              itemLayout=\"horizontal\"\r\n              pagination={{\r\n                onChange: page => {\r\n                },\r\n                pageSize: 5,\r\n              }}\r\n              dataSource={data}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.Image} />}\r\n                    title={<div>\r\n                      <h6>{item.DislayName} - <span style={{ fontSize: 12 }}> {moment(item.RateTime).format('DD/MM/yyyy')} </span> </h6>\r\n                      <Rate allowHalf disabled value={item.RateValue} />\r\n\r\n                    </div>}\r\n                    description={<span> {item.Cmt} </span>}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n            :\r\n            <h5 className=\"text-center\">Chưa có đánh giá</h5>\r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CommentCourses\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\services\\coursesToken.service.js",[],{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"358","replacedBy":"362"},{"ruleId":"360","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":122,"column":19,"nodeType":"366","messageId":"367","endLine":122,"endColumn":21},{"ruleId":"364","severity":1,"message":"365","line":148,"column":19,"nodeType":"366","messageId":"367","endLine":148,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":15,"column":51,"nodeType":"370","messageId":"371","endLine":15,"endColumn":63},{"ruleId":"364","severity":1,"message":"372","line":24,"column":24,"nodeType":"366","messageId":"367","endLine":24,"endColumn":26},{"ruleId":"364","severity":1,"message":"372","line":25,"column":28,"nodeType":"366","messageId":"367","endLine":25,"endColumn":30},{"ruleId":"364","severity":1,"message":"372","line":26,"column":28,"nodeType":"366","messageId":"367","endLine":26,"endColumn":30},{"ruleId":"364","severity":1,"message":"372","line":31,"column":24,"nodeType":"366","messageId":"367","endLine":31,"endColumn":26},{"ruleId":"364","severity":1,"message":"372","line":32,"column":28,"nodeType":"366","messageId":"367","endLine":32,"endColumn":30},{"ruleId":"364","severity":1,"message":"372","line":33,"column":28,"nodeType":"366","messageId":"367","endLine":33,"endColumn":30},{"ruleId":"364","severity":1,"message":"372","line":34,"column":28,"nodeType":"366","messageId":"367","endLine":34,"endColumn":30},{"ruleId":"364","severity":1,"message":"372","line":39,"column":24,"nodeType":"366","messageId":"367","endLine":39,"endColumn":26},{"ruleId":"364","severity":1,"message":"372","line":40,"column":28,"nodeType":"366","messageId":"367","endLine":40,"endColumn":30},{"ruleId":"373","severity":1,"message":"374","line":52,"column":6,"nodeType":"375","endLine":52,"endColumn":21,"suggestions":"376"},{"ruleId":"377","severity":1,"message":"378","line":63,"column":21,"nodeType":"379","endLine":63,"endColumn":162},{"ruleId":"368","severity":1,"message":"380","line":6,"column":3,"nodeType":"370","messageId":"371","endLine":6,"endColumn":9},{"ruleId":"368","severity":1,"message":"381","line":11,"column":10,"nodeType":"370","messageId":"371","endLine":11,"endColumn":16},{"ruleId":"368","severity":1,"message":"382","line":13,"column":3,"nodeType":"370","messageId":"371","endLine":13,"endColumn":8},{"ruleId":"368","severity":1,"message":"383","line":14,"column":3,"nodeType":"370","messageId":"371","endLine":14,"endColumn":8},{"ruleId":"368","severity":1,"message":"384","line":15,"column":3,"nodeType":"370","messageId":"371","endLine":15,"endColumn":17},{"ruleId":"368","severity":1,"message":"385","line":16,"column":3,"nodeType":"370","messageId":"371","endLine":16,"endColumn":20},{"ruleId":"368","severity":1,"message":"386","line":24,"column":9,"nodeType":"370","messageId":"371","endLine":24,"endColumn":16},{"ruleId":"368","severity":1,"message":"387","line":27,"column":10,"nodeType":"370","messageId":"371","endLine":27,"endColumn":17},{"ruleId":"368","severity":1,"message":"388","line":1,"column":17,"nodeType":"370","messageId":"371","endLine":1,"endColumn":25},{"ruleId":"368","severity":1,"message":"389","line":1,"column":27,"nodeType":"370","messageId":"371","endLine":1,"endColumn":36},{"ruleId":"368","severity":1,"message":"390","line":3,"column":30,"nodeType":"370","messageId":"371","endLine":3,"endColumn":40},{"ruleId":"368","severity":1,"message":"391","line":3,"column":42,"nodeType":"370","messageId":"371","endLine":3,"endColumn":48},{"ruleId":"368","severity":1,"message":"392","line":21,"column":10,"nodeType":"370","messageId":"371","endLine":21,"endColumn":17},{"ruleId":"368","severity":1,"message":"393","line":2,"column":10,"nodeType":"370","messageId":"371","endLine":2,"endColumn":17},{"ruleId":"368","severity":1,"message":"394","line":6,"column":10,"nodeType":"370","messageId":"371","endLine":6,"endColumn":24},{"ruleId":"368","severity":1,"message":"395","line":6,"column":26,"nodeType":"370","messageId":"371","endLine":6,"endColumn":46},{"ruleId":"368","severity":1,"message":"396","line":14,"column":5,"nodeType":"370","messageId":"371","endLine":14,"endColumn":16},{"ruleId":"368","severity":1,"message":"397","line":15,"column":5,"nodeType":"370","messageId":"371","endLine":15,"endColumn":14},{"ruleId":"373","severity":1,"message":"398","line":31,"column":6,"nodeType":"375","endLine":31,"endColumn":8,"suggestions":"399"},{"ruleId":"373","severity":1,"message":"400","line":20,"column":6,"nodeType":"375","endLine":20,"endColumn":8,"suggestions":"401"},{"ruleId":"373","severity":1,"message":"400","line":24,"column":6,"nodeType":"375","endLine":24,"endColumn":8,"suggestions":"402"},{"ruleId":"364","severity":1,"message":"365","line":34,"column":39,"nodeType":"366","messageId":"367","endLine":34,"endColumn":41},{"ruleId":"364","severity":1,"message":"365","line":40,"column":39,"nodeType":"366","messageId":"367","endLine":40,"endColumn":41},{"ruleId":"403","severity":1,"message":"404","line":50,"column":15,"nodeType":"379","endLine":50,"endColumn":50},{"ruleId":"403","severity":1,"message":"404","line":54,"column":15,"nodeType":"379","endLine":54,"endColumn":51},{"ruleId":"403","severity":1,"message":"404","line":58,"column":15,"nodeType":"379","endLine":58,"endColumn":53},{"ruleId":"364","severity":1,"message":"372","line":25,"column":50,"nodeType":"366","messageId":"367","endLine":25,"endColumn":52},{"ruleId":"373","severity":1,"message":"405","line":31,"column":7,"nodeType":"375","endLine":31,"endColumn":21,"suggestions":"406"},{"ruleId":"364","severity":1,"message":"365","line":34,"column":17,"nodeType":"366","messageId":"367","endLine":34,"endColumn":19},{"ruleId":"407","severity":1,"message":"408","line":40,"column":42,"nodeType":"409","messageId":"410","endLine":40,"endColumn":43,"fix":"411"},{"ruleId":"407","severity":1,"message":"408","line":63,"column":54,"nodeType":"409","messageId":"410","endLine":63,"endColumn":55,"fix":"412"},{"ruleId":"364","severity":1,"message":"365","line":103,"column":22,"nodeType":"366","messageId":"367","endLine":103,"endColumn":24},{"ruleId":"377","severity":1,"message":"378","line":127,"column":29,"nodeType":"379","endLine":127,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":30,"column":36,"nodeType":"366","messageId":"367","endLine":30,"endColumn":38},{"ruleId":"364","severity":1,"message":"365","line":49,"column":20,"nodeType":"366","messageId":"367","endLine":49,"endColumn":22},{"ruleId":"364","severity":1,"message":"365","line":55,"column":26,"nodeType":"366","messageId":"367","endLine":55,"endColumn":28},{"ruleId":"407","severity":1,"message":"408","line":62,"column":55,"nodeType":"409","messageId":"410","endLine":62,"endColumn":56,"fix":"413"},{"ruleId":"407","severity":1,"message":"408","line":74,"column":55,"nodeType":"409","messageId":"410","endLine":74,"endColumn":56,"fix":"414"},{"ruleId":"377","severity":1,"message":"378","line":88,"column":21,"nodeType":"379","endLine":88,"endColumn":57},{"ruleId":"403","severity":1,"message":"404","line":90,"column":25,"nodeType":"379","endLine":90,"endColumn":81},{"ruleId":"364","severity":1,"message":"365","line":92,"column":42,"nodeType":"366","messageId":"367","endLine":92,"endColumn":44},{"ruleId":"377","severity":1,"message":"378","line":152,"column":25,"nodeType":"379","endLine":152,"endColumn":59},{"ruleId":"373","severity":1,"message":"400","line":41,"column":6,"nodeType":"375","endLine":41,"endColumn":8,"suggestions":"415"},{"ruleId":"373","severity":1,"message":"416","line":23,"column":6,"nodeType":"375","endLine":23,"endColumn":8,"suggestions":"417"},{"ruleId":"373","severity":1,"message":"416","line":17,"column":6,"nodeType":"375","endLine":17,"endColumn":8,"suggestions":"418"},{"ruleId":"373","severity":1,"message":"419","line":44,"column":6,"nodeType":"375","endLine":44,"endColumn":8,"suggestions":"420"},{"ruleId":"364","severity":1,"message":"372","line":37,"column":66,"nodeType":"366","messageId":"367","endLine":37,"endColumn":68},{"ruleId":"364","severity":1,"message":"372","line":45,"column":58,"nodeType":"366","messageId":"367","endLine":45,"endColumn":60},{"ruleId":"373","severity":1,"message":"421","line":66,"column":8,"nodeType":"375","endLine":66,"endColumn":39,"suggestions":"422"},{"ruleId":"407","severity":1,"message":"408","line":34,"column":47,"nodeType":"409","messageId":"410","endLine":34,"endColumn":48,"fix":"423"},{"ruleId":"364","severity":1,"message":"372","line":37,"column":37,"nodeType":"366","messageId":"367","endLine":37,"endColumn":39},{"ruleId":"407","severity":1,"message":"408","line":50,"column":57,"nodeType":"409","messageId":"410","endLine":50,"endColumn":58,"fix":"424"},{"ruleId":"364","severity":1,"message":"372","line":54,"column":45,"nodeType":"366","messageId":"367","endLine":54,"endColumn":47},{"ruleId":"407","severity":1,"message":"408","line":66,"column":57,"nodeType":"409","messageId":"410","endLine":66,"endColumn":58,"fix":"425"},{"ruleId":"364","severity":1,"message":"372","line":70,"column":45,"nodeType":"366","messageId":"367","endLine":70,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":81,"column":35,"nodeType":"366","messageId":"367","endLine":81,"endColumn":37},{"ruleId":"377","severity":1,"message":"378","line":95,"column":49,"nodeType":"379","endLine":95,"endColumn":72},{"ruleId":"364","severity":1,"message":"365","line":144,"column":47,"nodeType":"366","messageId":"367","endLine":144,"endColumn":49},{"ruleId":"364","severity":1,"message":"365","line":30,"column":19,"nodeType":"366","messageId":"367","endLine":30,"endColumn":21},{"ruleId":"364","severity":1,"message":"365","line":35,"column":24,"nodeType":"366","messageId":"367","endLine":35,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":47,"column":44,"nodeType":"409","messageId":"410","endLine":47,"endColumn":45,"fix":"426"},{"ruleId":"364","severity":1,"message":"365","line":86,"column":87,"nodeType":"366","messageId":"367","endLine":86,"endColumn":89},{"ruleId":"364","severity":1,"message":"365","line":99,"column":46,"nodeType":"366","messageId":"367","endLine":99,"endColumn":48},{"ruleId":"364","severity":1,"message":"365","line":113,"column":18,"nodeType":"366","messageId":"367","endLine":113,"endColumn":20},"no-native-reassign",["427"],"no-negated-in-lhs",["428"],["427"],["428"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setimageUser' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'userJobId', and 'userid'. Either include them or remove the dependency array.","ArrayExpression",["429"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Player' is defined but never used.","'Image' is defined but never used.","'Video' is defined but never used.","'Transformation' is defined but never used.","'CloudinaryContext' is defined but never used.","'TabPane' is assigned a value but never used.","'content' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'DatePicker' is defined but never used.","'Select' is defined but never used.","'Content' is assigned a value but never used.","'message' is defined but never used.","'localparseJson' is defined but never used.","'parseAccessToken_res' is defined but never used.","'setnameUser' is assigned a value but never used.","'saveToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'userid'. Either include them or remove the dependency array.",["430"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["431"],["432"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["433"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"434","text":"435"},{"range":"436","text":"437"},{"range":"438","text":"439"},{"range":"440","text":"439"},["441"],"React Hook useEffect has a missing dependency: 'APIgetCategoryByUserID'. Either include it or remove the dependency array.",["442"],["443"],"React Hook useEffect has a missing dependency: 'getInfoCategoryByID'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has missing dependencies: 'defaultName' and 'keyId'. Either include them or remove the dependency array.",["445"],{"range":"446","text":"447"},{"range":"448","text":"449"},{"range":"450","text":"449"},{"range":"451","text":"435"},"no-global-assign","no-unsafe-negation",{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"456","fix":"458"},{"desc":"459","fix":"460"},[1297,1308],"\r\n        .",[2323,2344],"\r\n                  .",[2147,2170],"\r\n                    .",[2615,2638],{"desc":"456","fix":"461"},{"desc":"462","fix":"463"},{"desc":"462","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},[1157,1172],"\r\n            .",[1692,1711],"\r\n                .",[2314,2333],[1382,1393],"Update the dependencies array to be: [history, profileTitlle, userJobId, userid]",{"range":"469","text":"470"},"Update the dependencies array to be: [form, userid]",{"range":"471","text":"472"},"Update the dependencies array to be: [userid]",{"range":"473","text":"474"},{"range":"475","text":"474"},"Update the dependencies array to be: [userid, hide, id]",{"range":"476","text":"477"},{"range":"478","text":"474"},"Update the dependencies array to be: [APIgetCategoryByUserID]",{"range":"479","text":"480"},{"range":"481","text":"480"},"Update the dependencies array to be: [getInfoCategoryByID]",{"range":"482","text":"483"},"Update the dependencies array to be: [defaultName, keyId, props.location.search, userid]",{"range":"484","text":"485"},[2037,2052],"[history, profileTitlle, userJobId, userid]",[859,861],"[form, userid]",[701,703],"[userid]",[837,839],[1084,1098],"[userid, hide, id]",[1575,1577],[694,696],"[APIgetCategoryByUserID]",[644,646],[1572,1574],"[getInfoCategoryByID]",[3153,3184],"[defaultName, keyId, props.location.search, userid]"]