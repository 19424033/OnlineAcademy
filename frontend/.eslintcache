[{"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\index.js":"1","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\App.js":"2","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Header\\Header.js":"4","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Homepage.js":"5","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Login\\Login.js":"6","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Register\\Register.js":"7"},{"size":478,"mtime":1610625023279,"results":"8","hashOfConfig":"9"},{"size":652,"mtime":1610635890180,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2414,"mtime":1610586138948,"results":"12","hashOfConfig":"9"},{"size":1439,"mtime":1610603651315,"results":"13","hashOfConfig":"9"},{"size":4654,"mtime":1610635462645,"results":"14","hashOfConfig":"9"},{"size":4993,"mtime":1610637654176,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1iupehj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\index.js",[],["36","37"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\App.js",["38"],"import \"antd/dist/antd.css\";\r\nimport \"./assets/css/global.scss\";\r\nimport React, { useState } from \"react\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport HomePage from \"./components/HomePage/Homepage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact></Route>\r\n        <Route path=\"/login\" component={Login}></Route>\r\n        <Route path=\"/register\" component={Login}></Route>\r\n        <Route path=\"*\" component={HomePage}></Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Header\\Header.js",[],["39","40"],"C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\HomePage\\Homepage.js",["41"],"import HeaderCustomize from \"./Header/Header\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst Homepage = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleCollapsed = () => setCollapsed(!collapsed);\r\n  return (\r\n    <Layout>\r\n      <HeaderCustomize />\r\n      <Content style={{ padding: \"150px 200px 0px 200px\" }}>\r\n        <Layout\r\n          className=\"site-layout-background\"\r\n          style={{ padding: \"24px 0\" }}\r\n        >\r\n          <Sider className=\"site-layout-background\" width={200}>\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={[\"1\"]}\r\n              defaultOpenKeys={[\"sub1\"]}\r\n              style={{ height: \"100%\" }}\r\n            >\r\n              <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n                <Menu.Item key=\"1\">option1</Menu.Item>\r\n                <Menu.Item key=\"2\">option2</Menu.Item>\r\n                <Menu.Item key=\"3\">option3</Menu.Item>\r\n                <Menu.Item key=\"4\">option4</Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n          <Content style={{ padding: \"0 24px\", minHeight: 280 }}>\r\n            Content\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Login\\Login.js",["42"],"import React, { useState } from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport \"./login.scss\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomePage from \"../HomePage/Homepage\";\r\nimport Register from '../Register/Register'\r\nconst Login = () => {\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <div className=\"page-wraper\">\r\n            <div className=\"account-form\">\r\n              <div className=\"account-head\">\r\n                <Link to=\"/\">\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                    alt=\"\"\r\n                    width={320}\r\n                  />\r\n                </Link>\r\n              </div>\r\n              <div className=\"account-form-inner\">\r\n                <div className=\"account-container\">\r\n                  <div className=\"heading-bx left\">\r\n                    <h2 className=\"title-head\">\r\n                      Login to your <span>Account</span>\r\n                    </h2>\r\n                    <p>\r\n                      Don't have an account? Â {\" \"}\r\n                      <Link to=\"/register\">Create one here </Link>\r\n                    </p>\r\n                  </div>\r\n                  <Form\r\n                    name=\"normal_login\"\r\n                    classNameName=\"contact-bx\"\r\n                    initialValues={{\r\n                      remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                  >\r\n                    <Form.Item\r\n                      name=\"username\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please input your Username!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        prefix={\r\n                          <UserOutlined classNameName=\"site-form-item-icon\" />\r\n                        }\r\n                        placeholder=\"Username\"\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                      name=\"password\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Please input your Password!\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        prefix={\r\n                          <LockOutlined classNameName=\"site-form-item-icon\" />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                      <Form.Item\r\n                        name=\"remember\"\r\n                        valuePropName=\"checked\"\r\n                        noStyle\r\n                      >\r\n                        <Checkbox>Remember me</Checkbox>\r\n                      </Form.Item>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        className=\"login-form-button\"\r\n                      >\r\n                        Log in\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Form>\r\n                  <div className=\"row placeani\">\r\n                    <div className=\"col-lg-12\">\r\n                      <h6>Login with Social media</h6>\r\n                      <div className=\"d-flex\">\r\n                        <a className=\"btn flex-fill m-r5 facebook\" href=\"/\">\r\n                          <i className=\"fa fa-facebook\"></i>Facebook\r\n                        </a>\r\n                        <a className=\"btn flex-fill m-l5 google-plus\" href=\"/\">\r\n                          <i className=\"fa fa-google-plus\"></i>Google Plus\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/register\" >\r\n         <Register/>\r\n        </Route>\r\n        <Route path=\"/\" component={HomePage} exact></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\HaToan\\Documents\\OnlineAcademy\\frontend\\src\\components\\Register\\Register.js",["43"],"import React, { useState } from \"react\";\r\nimport \"./register.scss\";\r\n\r\nimport { Form, Input, Button, Select } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 10 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\nconst Register = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select>\r\n        <Option value=\"84\">+84</Option>\r\n        <Option value=\"85\">+85</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-wraper\">\r\n      <div className=\"account-form\">\r\n        <div className=\"account-head\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              width={320}\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div className=\"account-form-inner\">\r\n          <div className=\"account-container\">\r\n            <div className=\"heading-bx left\">\r\n              <h2 className=\"title-head\">\r\n                Sign Up <span>Now</span>\r\n              </h2>\r\n              <p>\r\n                Login Your Account\r\n                <Link to=\"/login\"> Click here </Link>\r\n              </p>\r\n            </div>\r\n            <Form\r\n              {...formItemLayout}\r\n              form={form}\r\n              name=\"register\"\r\n              onFinish={onFinish}\r\n              initialValues={{\r\n                prefix: \"84\",\r\n              }}\r\n              scrollToFirstError\r\n            >\r\n              <Form.Item\r\n                name=\"nickname\"\r\n                label={<span>Nickname&nbsp;</span>}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your nickname!\",\r\n                    whitespace: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"The input is not valid E-mail!\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your E-mail!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your password!\",\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={[\"password\"]}\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please confirm your password!\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue(\"password\") === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n\r\n                      return Promise.reject(\r\n                        \"The two passwords that you entered do not match!\"\r\n                      );\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your phone number!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  addonBefore={prefixSelector}\r\n                  style={{\r\n                    width: \"100%\",\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":17,"nodeType":"50","messageId":"51","endLine":3,"endColumn":25},{"ruleId":"44","replacedBy":"52"},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","severity":1,"message":"54","line":11,"column":9,"nodeType":"50","messageId":"51","endLine":11,"endColumn":24},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["55"],["56"],"'handleCollapsed' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]